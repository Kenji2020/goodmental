{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"id\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from \"react\";\nimport { SharedElement as RawSharedElement } from \"react-native-shared-element\";\nimport SharedElementSceneContext from \"./SharedElementSceneContext\";\n\nvar SharedElement = function (_React$Component) {\n  _inherits(SharedElement, _React$Component);\n\n  var _super = _createSuper(SharedElement);\n\n  function SharedElement(props) {\n    var _this;\n\n    _classCallCheck(this, SharedElement);\n\n    _this = _super.call(this, props);\n    _this.node = null;\n    _this.sharedId = \"\";\n    _this.sceneData = null;\n\n    _this.onSetNode = function (node) {\n      if (_this.node === node) {\n        return;\n      }\n\n      if (_this.sceneData && _this.node && _this.sharedId) {\n        _this.sceneData.removeNode(_this.sharedId, _this.node);\n      }\n\n      _this.node = node;\n\n      if (_this.sceneData && _this.node && _this.sharedId) {\n        _this.sceneData.addNode(_this.sharedId, _this.node);\n      }\n\n      _this.node = node;\n    };\n\n    _this.sharedId = props.id;\n    return _this;\n  }\n\n  _createClass(SharedElement, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          id = _this$props.id,\n          otherProps = _objectWithoutProperties(_this$props, _excluded);\n\n      return React.createElement(SharedElementSceneContext.Consumer, null, function (sceneData) {\n        _this2.sceneData = sceneData;\n        return React.createElement(RawSharedElement, _objectSpread(_objectSpread({}, otherProps), {}, {\n          onNode: _this2.onSetNode\n        }));\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var id = this.props.id;\n\n      if (this.sharedId !== id) {\n        if (this.sceneData && this.sharedId && this.node) {\n          this.sceneData.removeNode(this.sharedId, this.node);\n        }\n\n        this.sharedId = id;\n\n        if (this.sceneData && this.sharedId && this.node) {\n          this.sceneData.addNode(this.sharedId, this.node);\n        }\n      }\n    }\n  }]);\n\n  return SharedElement;\n}(React.Component);\n\nexport default SharedElement;","map":{"version":3,"sources":["../src/SharedElement.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SACE,aAAa,IAAI,gBADnB,QAGO,6BAHP;AAKA,OAAO,yBAAP;;IASM,a;;;;;EAKJ,uBAAY,KAAZ,EAAqC;IAAA;;IAAA;;IACnC,0BAAM,KAAN;IADmC,MAJ7B,IAI6B,GAJI,IAIJ;IAAA,MAH7B,QAG6B,GAHV,EAGU;IAAA,MAF7B,SAE6B,GAFc,IAEd;;IAAA,MAqC7B,SArC6B,GAqCjB,UAAC,IAAD,EAAmC;MACrD,IAAI,MAAK,IAAL,KAAc,IAAlB,EAAwB;QACtB;MACD;;MACD,IAAI,MAAK,SAAL,IAAkB,MAAK,IAAvB,IAA+B,MAAK,QAAxC,EAAkD;QAChD,MAAK,SAAL,CAAe,UAAf,CAA0B,MAAK,QAA/B,EAAyC,MAAK,IAA9C;MACD;;MACD,MAAK,IAAL,GAAY,IAAZ;;MACA,IAAI,MAAK,SAAL,IAAkB,MAAK,IAAvB,IAA+B,MAAK,QAAxC,EAAkD;QAChD,MAAK,SAAL,CAAe,OAAf,CAAuB,MAAK,QAA5B,EAAsC,MAAK,IAA3C;MACD;;MACD,MAAK,IAAL,GAAY,IAAZ;IACD,CAjDoC;;IAEnC,MAAK,QAAL,GAAgB,KAAK,CAAC,EAAtB;IAFmC;EAGpC;;;;WAED,kBAAM;MAAA;;MACJ,kBAGI,KAAK,KAHT;MAAA,IACE,EADF,eACE,EADF;MAAA,IAEK,UAFL;;MAIA,OACE,KAAA,CAAA,aAAA,CAAC,yBAAyB,CAAC,QAA3B,EAAmC,IAAnC,EACG,UAAC,SAAD,EAAc;QAKb,MAAI,CAAC,SAAL,GAAiB,SAAjB;QACA,OAAO,KAAA,CAAA,aAAA,CAAC,gBAAD,kCAAsB,UAAtB;UAAkC,MAAM,EAAE,MAAI,CAAC;QAA/C,GAAP;MACD,CARH,CADF;IAYD;;;WAED,8BAAkB;MAChB,IAAQ,EAAR,GAAe,KAAK,KAApB,CAAQ,EAAR;;MACA,IAAI,KAAK,QAAL,KAAkB,EAAtB,EAA0B;QACxB,IAAI,KAAK,SAAL,IAAkB,KAAK,QAAvB,IAAmC,KAAK,IAA5C,EAAkD;UAChD,KAAK,SAAL,CAAe,UAAf,CAA0B,KAAK,QAA/B,EAAyC,KAAK,IAA9C;QACD;;QACD,KAAK,QAAL,GAAgB,EAAhB;;QACA,IAAI,KAAK,SAAL,IAAkB,KAAK,QAAvB,IAAmC,KAAK,IAA5C,EAAkD;UAChD,KAAK,SAAL,CAAe,OAAf,CAAuB,KAAK,QAA5B,EAAsC,KAAK,IAA3C;QACD;MACF;IACF;;;;EAxCyB,KAAK,CAAC,S;;AAyDlC,eAAe,aAAf","sourcesContent":["import * as React from \"react\";\nimport {\n  SharedElement as RawSharedElement,\n  SharedElementProps as RawSharedElementProps,\n} from \"react-native-shared-element\";\n\nimport SharedElementSceneContext from \"./SharedElementSceneContext\";\nimport SharedElementSceneData from \"./SharedElementSceneData\";\nimport { SharedElementNode } from \"./types\";\n// import invariant from '../utils/invariant';\n\nexport type SharedElementProps = Omit<RawSharedElementProps, \"onNode\"> & {\n  id: string;\n};\n\nclass SharedElement extends React.Component<SharedElementProps> {\n  private node: SharedElementNode | null = null;\n  private sharedId: string = \"\";\n  private sceneData: SharedElementSceneData | null = null;\n\n  constructor(props: SharedElementProps) {\n    super(props);\n    this.sharedId = props.id;\n  }\n\n  render() {\n    const {\n      id, //eslint-disable-line @typescript-eslint/no-unused-vars\n      ...otherProps\n    } = this.props;\n    return (\n      <SharedElementSceneContext.Consumer>\n        {(sceneData) => {\n          /*invariant(\n            sceneData != null,\n            'The SharedElementSceneContext is not set, did you forget to wrap your scene component with `createSharedElementScene(..)`?'\n          );*/\n          this.sceneData = sceneData;\n          return <RawSharedElement {...otherProps} onNode={this.onSetNode} />;\n        }}\n      </SharedElementSceneContext.Consumer>\n    );\n  }\n\n  componentDidUpdate() {\n    const { id } = this.props;\n    if (this.sharedId !== id) {\n      if (this.sceneData && this.sharedId && this.node) {\n        this.sceneData.removeNode(this.sharedId, this.node);\n      }\n      this.sharedId = id;\n      if (this.sceneData && this.sharedId && this.node) {\n        this.sceneData.addNode(this.sharedId, this.node);\n      }\n    }\n  }\n\n  private onSetNode = (node: SharedElementNode | null) => {\n    if (this.node === node) {\n      return;\n    }\n    if (this.sceneData && this.node && this.sharedId) {\n      this.sceneData.removeNode(this.sharedId, this.node);\n    }\n    this.node = node;\n    if (this.sceneData && this.node && this.sharedId) {\n      this.sceneData.addNode(this.sharedId, this.node);\n    }\n    this.node = node;\n  };\n}\n\nexport default SharedElement;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}