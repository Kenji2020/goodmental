{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nvar initialState = {\n  cartItems: [],\n  message: false\n};\nexport var cartSlice = createSlice({\n  name: 'cart',\n  initialState: initialState,\n  reducers: {\n    addToCart: function addToCart(state, _ref) {\n      var payload = _ref.payload;\n      var itemIndex = state.cartItems.findIndex(function (item) {\n        return item.id === payload.id;\n      });\n\n      if (itemIndex >= 0) {\n        alert('This course already added to your cart');\n        state.message = false;\n      } else {\n        state.cartItems.push(payload);\n        state.message = true;\n      }\n    },\n    removeToCart: function removeToCart(state, _ref2) {\n      var payload = _ref2.payload;\n      state.cartItems = state.cartItems.filter(function (item) {\n        return item.id !== payload.id;\n      });\n    }\n  }\n});\nvar _cartSlice$actions = cartSlice.actions,\n    addToCart = _cartSlice$actions.addToCart,\n    removeToCart = _cartSlice$actions.removeToCart;\nexport { addToCart, removeToCart };\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","cartItems","message","cartSlice","name","reducers","addToCart","state","payload","itemIndex","findIndex","item","id","alert","push","removeToCart","filter","actions","reducer"],"sources":["/Users/victorsalgado/Desktop/goodmental/src/redux/features/cartSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  cartItems: [],\r\n  message:false,\r\n}\r\n\r\nexport const cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState,\r\n  reducers: {\r\n    addToCart: (state,{payload}) => {\r\n      const itemIndex = state.cartItems.findIndex(item => item.id === payload.id);\r\n      if(itemIndex >= 0){\r\n          alert('This course already added to your cart');\r\n          state.message = false;\r\n      }\r\n      else {\r\n        state.cartItems.push(payload);\r\n        state.message = true;\r\n      }\r\n    },\r\n\r\n    removeToCart:(state,{payload}) => {\r\n      state.cartItems = state.cartItems.filter(item => item.id !== payload.id)\r\n    }\r\n\r\n  },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { addToCart,removeToCart} = cartSlice.actions\r\n\r\nexport default cartSlice.reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,IAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE,EADQ;EAEnBC,OAAO,EAAC;AAFW,CAArB;AAKA,OAAO,IAAMC,SAAS,GAAGJ,WAAW,CAAC;EACnCK,IAAI,EAAE,MAD6B;EAEnCJ,YAAY,EAAZA,YAFmC;EAGnCK,QAAQ,EAAE;IACRC,SAAS,EAAE,mBAACC,KAAD,QAAqB;MAAA,IAAbC,OAAa,QAAbA,OAAa;MAC9B,IAAMC,SAAS,GAAGF,KAAK,CAACN,SAAN,CAAgBS,SAAhB,CAA0B,UAAAC,IAAI;QAAA,OAAIA,IAAI,CAACC,EAAL,KAAYJ,OAAO,CAACI,EAAxB;MAAA,CAA9B,CAAlB;;MACA,IAAGH,SAAS,IAAI,CAAhB,EAAkB;QACdI,KAAK,CAAC,wCAAD,CAAL;QACAN,KAAK,CAACL,OAAN,GAAgB,KAAhB;MACH,CAHD,MAIK;QACHK,KAAK,CAACN,SAAN,CAAgBa,IAAhB,CAAqBN,OAArB;QACAD,KAAK,CAACL,OAAN,GAAgB,IAAhB;MACD;IACF,CAXO;IAaRa,YAAY,EAAC,sBAACR,KAAD,SAAqB;MAAA,IAAbC,OAAa,SAAbA,OAAa;MAChCD,KAAK,CAACN,SAAN,GAAkBM,KAAK,CAACN,SAAN,CAAgBe,MAAhB,CAAuB,UAAAL,IAAI;QAAA,OAAIA,IAAI,CAACC,EAAL,KAAYJ,OAAO,CAACI,EAAxB;MAAA,CAA3B,CAAlB;IACD;EAfO;AAHyB,CAAD,CAA7B;AAwBA,yBAAkCT,SAAS,CAACc,OAA5C;AAAA,IAAQX,SAAR,sBAAQA,SAAR;AAAA,IAAkBS,YAAlB,sBAAkBA,YAAlB;;AAEP,eAAeZ,SAAS,CAACe,OAAzB"},"metadata":{},"sourceType":"module"}