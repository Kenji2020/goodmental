{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport LottieView from 'lottie-react-native';\nimport { colors } from \"../theme\";\nimport Header from \"./Header\";\nimport Screen from \"./Screen\";\nimport AppButton from \"./AppButton\";\nimport AppText from \"./AppText\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { isConfirmation, selectUser } from \"../redux/features/userSlice\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function AppConfirmation(_ref) {\n  var headerTitle = _ref.headerTitle,\n      Link = _ref.Link,\n      buttonTitle = _ref.buttonTitle,\n      title = _ref.title,\n      subtitle = _ref.subtitle;\n  var navigation = useNavigation();\n  var user = useSelector(selectUser);\n  var dispatch = useDispatch();\n\n  var handleConfirmation = function handleConfirmation() {\n    dispatch(isConfirmation(true));\n\n    if (user != null && user.email) {\n      return navigation.navigate('Home');\n    } else {\n      return navigation.navigate('Login');\n    }\n  };\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(Header, {\n      style: {\n        backgroundColor: colors.light\n      },\n      title: headerTitle + \" Cuenta\",\n      onPress: function onPress() {\n        return navigation.goBack();\n      }\n    }), _jsx(Screen, {\n      style: styles.container,\n      children: _jsxs(View, {\n        style: styles.confirmationWrapper,\n        children: [_jsx(LottieView, {\n          autoPlay: true,\n          loop: false,\n          style: {\n            width: 150,\n            height: 150\n          },\n          source: require(\"../data/successfull.json\")\n        }), _jsxs(View, {\n          style: styles.textContainer,\n          children: [_jsx(AppText, {\n            preset: \"h3\",\n            style: styles.text,\n            children: title\n          }), _jsx(AppText, {\n            style: styles.subtitle,\n            children: subtitle\n          })]\n        }), _jsx(AppButton, {\n          onPress: handleConfirmation,\n          title: \"\" + buttonTitle\n        })]\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: colors.light,\n    paddingTop: 85,\n    paddingHorizontal: 20\n  },\n  confirmationWrapper: {\n    paddingVertical: 45,\n    paddingHorizontal: 20,\n    backgroundColor: colors.white,\n    borderRadius: 5,\n    alignItems: 'center'\n  },\n  confirmationIcon: {\n    alignSelf: \"center\"\n  },\n  textContainer: {\n    marginBottom: 35\n  },\n  text: {\n    paddingTop: 35,\n    marginBottom: 20,\n    textAlign: \"center\",\n    lineHeight: 28,\n    color: colors.black\n  },\n  subtitle: {\n    textAlign: \"center\",\n    lineHeight: 24\n  }\n});","map":{"version":3,"names":["React","useNavigation","LottieView","colors","Header","Screen","AppButton","AppText","useDispatch","useSelector","isConfirmation","selectUser","AppConfirmation","headerTitle","Link","buttonTitle","title","subtitle","navigation","user","dispatch","handleConfirmation","email","navigate","backgroundColor","light","goBack","styles","container","confirmationWrapper","width","height","require","textContainer","text","StyleSheet","create","paddingTop","paddingHorizontal","paddingVertical","white","borderRadius","alignItems","confirmationIcon","alignSelf","marginBottom","textAlign","lineHeight","color","black"],"sources":["/Users/victorsalgado/Desktop/goodmental/src/components/AppConfirmation.js"],"sourcesContent":["import React from \"react\";\r\nimport { View, StyleSheet, Image } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport LottieView from 'lottie-react-native';\r\n\r\nimport { colors } from \"../theme\";\r\nimport Header from \"./Header\";\r\nimport Screen from \"./Screen\";\r\nimport AppButton from \"./AppButton\";\r\nimport AppText from './AppText';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { isConfirmation, selectUser } from \"../redux/features/userSlice\";\r\n// import useGlobalContext from \"../hooks/useGlobalContext\";\r\n\r\nexport default function AppConfirmation({ headerTitle, Link, buttonTitle, title, subtitle, }) {\r\n  const navigation = useNavigation();\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleConfirmation = () => {\r\n    dispatch(isConfirmation(true));\r\n    if(user?.email){\r\n     return navigation.navigate('Home')\r\n    }\r\n    else {\r\n     return navigation.navigate('Login')\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <Header\r\n        style={{ backgroundColor: colors.light }}\r\n        title={`${headerTitle} Cuenta`} \r\n        onPress={() => navigation.goBack()}\r\n      />\r\n      <Screen style={styles.container}>\r\n        <View style={styles.confirmationWrapper}>\r\n\r\n        <LottieView\r\n          autoPlay\r\n          loop={false}\r\n          style={{width:150,height:150}}\r\n          source={require('../data/successfull.json')}\r\n        />\r\n\r\n          <View style={styles.textContainer}>\r\n            <AppText preset=\"h3\" style={styles.text}>{title}</AppText>\r\n            <AppText style={styles.subtitle}>{subtitle}</AppText>\r\n          </View>\r\n\r\n          <AppButton\r\n            onPress={handleConfirmation}\r\n            title={`${buttonTitle}`}\r\n          />\r\n        </View>\r\n      </Screen>\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: colors.light,\r\n    paddingTop: 85,\r\n    paddingHorizontal: 20,\r\n  },\r\n  confirmationWrapper: {\r\n    paddingVertical: 45,\r\n    paddingHorizontal: 20,\r\n    backgroundColor: colors.white,\r\n    borderRadius: 5,\r\n    alignItems:'center'\r\n  },\r\n  confirmationIcon: {\r\n    alignSelf: \"center\",\r\n  },\r\n  textContainer: {\r\n    marginBottom: 35,\r\n  },\r\n  text: {\r\n    paddingTop: 35,\r\n    marginBottom: 20,\r\n    textAlign: \"center\",\r\n    lineHeight: 28,\r\n    color: colors.black,\r\n  },\r\n  subtitle: {\r\n    textAlign: \"center\",\r\n    lineHeight: 24,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}