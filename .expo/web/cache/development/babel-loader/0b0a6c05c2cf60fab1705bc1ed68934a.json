{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState, useRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport AppButton from \"../components/AppButton\";\nimport Screen from \"../components/Screen\";\nimport { colors, typography } from \"../theme\";\nimport Header from \"./../components/Header\";\nimport AppText from \"./../components/AppText\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function ConfirmationCode(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    1: \"\",\n    2: \"\",\n    3: \"\",\n    4: \"\",\n    5: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      otp = _useState2[0],\n      setOtp = _useState2[1];\n\n  var firstInput = useRef();\n  var secondInput = useRef();\n  var thirdInput = useRef();\n  var fourthInput = useRef();\n  return _jsxs(_Fragment, {\n    children: [_jsx(Header, {\n      style: {\n        backgroundColor: colors.light\n      },\n      title: \"Verify OTP\",\n      onPress: function onPress() {\n        return navigation.goBack();\n      }\n    }), _jsx(Screen, {\n      style: styles.container,\n      children: _jsx(KeyboardAwareScrollView, {\n        children: _jsxs(View, {\n          style: styles.confirmationWrapper,\n          children: [_jsx(AppText, {\n            style: styles.title,\n            children: \"Enter your OTP code here.\"\n          }), _jsxs(View, {\n            style: styles.otpCodeWrapper,\n            children: [_jsx(View, {\n              style: styles.inputBox,\n              children: _jsx(TextInput, {\n                style: styles.textInput,\n                keyboardType: \"number-pad\",\n                maxLength: 1,\n                ref: firstInput,\n                onChangeText: function onChangeText(text) {\n                  setOtp(_objectSpread(_objectSpread({}, otp), {}, {\n                    1: text\n                  }));\n                  text && secondInput.current.focus();\n                }\n              })\n            }), _jsx(View, {\n              style: styles.inputBox,\n              children: _jsx(TextInput, {\n                style: styles.textInput,\n                keyboardType: \"number-pad\",\n                maxLength: 1,\n                ref: secondInput,\n                onChangeText: function onChangeText(text) {\n                  setOtp(_objectSpread(_objectSpread({}, otp), {}, {\n                    2: text\n                  }));\n                  text ? thirdInput.current.focus() : firstInput.current.focus();\n                }\n              })\n            }), _jsx(View, {\n              style: styles.inputBox,\n              children: _jsx(TextInput, {\n                style: styles.textInput,\n                keyboardType: \"number-pad\",\n                maxLength: 1,\n                ref: thirdInput,\n                onChangeText: function onChangeText(text) {\n                  setOtp(_objectSpread(_objectSpread({}, otp), {}, {\n                    3: text\n                  }));\n                  text ? fourthInput.current.focus() : secondInput.current.focus();\n                }\n              })\n            }), _jsx(View, {\n              style: styles.inputBox,\n              children: _jsx(TextInput, {\n                style: styles.textInput,\n                keyboardType: \"number-pad\",\n                maxLength: 1,\n                ref: fourthInput,\n                onChangeText: function onChangeText(text) {\n                  setOtp(_objectSpread(_objectSpread({}, otp), {}, {\n                    4: text\n                  }));\n                }\n              })\n            })]\n          }), _jsxs(View, {\n            style: styles.subtitleContainer,\n            children: [_jsx(AppText, {\n              style: styles.subtitleText,\n              children: \"Didn\\u2019t receive the OTP?\"\n            }), _jsx(TouchableOpacity, {\n              children: _jsx(AppText, {\n                preset: \"semibold\",\n                style: styles.resendLink,\n                children: \"Resend.\"\n              })\n            })]\n          }), _jsx(AppButton, {\n            title: \"Verify\",\n            onPress: function onPress() {\n              return navigation.navigate(\"AccountConfirmation\");\n            }\n          })]\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: colors.light,\n    paddingTop: 85,\n    paddingHorizontal: 20\n  },\n  confirmationWrapper: {\n    paddingVertical: 35,\n    paddingHorizontal: 20,\n    backgroundColor: colors.white,\n    borderRadius: 5\n  },\n  title: {\n    marginBottom: 30\n  },\n  otpCodeWrapper: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginBottom: 30\n  },\n  inputBox: {\n    borderRadius: 50,\n    backgroundColor: colors.light2,\n    borderWidth: 2,\n    borderColor: colors.light\n  },\n  textInput: {\n    textAlign: \"center\",\n    paddingHorizontal: 22,\n    paddingVertical: 14.5,\n    fontSize: 24,\n    fontFamily: typography.regular,\n    color: colors.primary,\n    width: 60,\n    borderRadius: 50\n  },\n  subtitleContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 30\n  },\n  subtitleText: {\n    lineHeight: 16 * 1.7\n  },\n  resendLink: {\n    color: colors.black,\n    lineHeight: 16 * 1.7,\n    marginLeft: 5\n  }\n});","map":{"version":3,"names":["React","useState","useRef","KeyboardAwareScrollView","AppButton","Screen","colors","typography","Header","AppText","ConfirmationCode","navigation","otp","setOtp","firstInput","secondInput","thirdInput","fourthInput","backgroundColor","light","goBack","styles","container","confirmationWrapper","title","otpCodeWrapper","inputBox","textInput","text","current","focus","subtitleContainer","subtitleText","resendLink","navigate","StyleSheet","create","paddingTop","paddingHorizontal","paddingVertical","white","borderRadius","marginBottom","flexDirection","alignItems","justifyContent","light2","borderWidth","borderColor","textAlign","fontSize","fontFamily","regular","color","primary","width","lineHeight","black","marginLeft"],"sources":["/Users/victorsalgado/Desktop/goodmental/src/screens/ConfirmationCode.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { View, StyleSheet, TextInput, TouchableOpacity } from \"react-native\";\r\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\r\n\r\nimport AppButton from \"../components/AppButton\";\r\nimport Screen from \"../components/Screen\";\r\nimport { colors, typography } from \"../theme\";\r\nimport Header from \"./../components/Header\";\r\nimport AppText from './../components/AppText';\r\n\r\nexport default function ConfirmationCode({ navigation }) {\r\n  const [otp, setOtp] = useState({ 1: \"\", 2: \"\", 3: \"\", 4: \"\", 5: \"\" });\r\n\r\n  const firstInput = useRef();\r\n  const secondInput = useRef();\r\n  const thirdInput = useRef();\r\n  const fourthInput = useRef();\r\n  return (\r\n    <>\r\n      <Header\r\n        style={{ backgroundColor: colors.light }}\r\n        title=\"Verify OTP\"\r\n        onPress={() => navigation.goBack()}\r\n      />\r\n\r\n      <Screen style={styles.container}>\r\n        <KeyboardAwareScrollView>\r\n          <View style={styles.confirmationWrapper}>\r\n            <AppText style={styles.title}>Enter your OTP code here.</AppText>\r\n            <View style={styles.otpCodeWrapper}>\r\n              <View style={styles.inputBox}>\r\n                <TextInput\r\n                  style={styles.textInput}\r\n                  keyboardType=\"number-pad\"\r\n                  maxLength={1}\r\n                  ref={firstInput}\r\n                  onChangeText={(text) => {\r\n                    setOtp({ ...otp, 1: text });\r\n                    text && secondInput.current.focus();\r\n                  }}\r\n                />\r\n              </View>\r\n\r\n              <View style={styles.inputBox}>\r\n                <TextInput\r\n                  style={styles.textInput}\r\n                  keyboardType=\"number-pad\"\r\n                  maxLength={1}\r\n                  ref={secondInput}\r\n                  onChangeText={(text) => {\r\n                    setOtp({ ...otp, 2: text });\r\n                    text\r\n                      ? thirdInput.current.focus()\r\n                      : firstInput.current.focus();\r\n                  }}\r\n                />\r\n              </View>\r\n\r\n              <View style={styles.inputBox}>\r\n                <TextInput\r\n                  style={styles.textInput}\r\n                  keyboardType=\"number-pad\"\r\n                  maxLength={1}\r\n                  ref={thirdInput}\r\n                  onChangeText={(text) => {\r\n                    setOtp({ ...otp, 3: text });\r\n                    text\r\n                      ? fourthInput.current.focus()\r\n                      : secondInput.current.focus();\r\n                  }}\r\n                />\r\n              </View>\r\n\r\n              <View style={styles.inputBox}>\r\n                <TextInput\r\n                  style={styles.textInput}\r\n                  keyboardType=\"number-pad\"\r\n                  maxLength={1}\r\n                  ref={fourthInput}\r\n                  onChangeText={(text) => {\r\n                    setOtp({ ...otp, 4: text });\r\n                  }}\r\n                />\r\n              </View>\r\n            </View>\r\n\r\n            <View style={styles.subtitleContainer}>\r\n              <AppText style={styles.subtitleText}>Didn’t receive the OTP?</AppText>\r\n              <TouchableOpacity>\r\n                <AppText preset=\"semibold\" style={styles.resendLink}>Resend.</AppText>\r\n              </TouchableOpacity>\r\n            </View>\r\n\r\n            <AppButton title=\"Verify\" onPress={() => navigation.navigate(\"AccountConfirmation\")} />\r\n          </View>\r\n        </KeyboardAwareScrollView>\r\n      </Screen>\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: colors.light,\r\n    paddingTop: 85,\r\n    paddingHorizontal: 20,\r\n  },\r\n  confirmationWrapper: {\r\n    paddingVertical: 35,\r\n    paddingHorizontal: 20,\r\n    backgroundColor: colors.white,\r\n    borderRadius: 5,\r\n  },\r\n  title: {\r\n    marginBottom: 30,\r\n  },\r\n  otpCodeWrapper: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 30,\r\n  },\r\n  inputBox: {\r\n    borderRadius: 50,\r\n    backgroundColor: colors.light2,\r\n    borderWidth: 2,\r\n    borderColor: colors.light,\r\n  },\r\n  textInput: {\r\n    textAlign: \"center\",\r\n    paddingHorizontal: 22,\r\n    paddingVertical: 14.5,\r\n    fontSize: 24,\r\n    fontFamily: typography.regular,\r\n    color: colors.primary,\r\n    width: 60,\r\n    borderRadius: 50,\r\n  },\r\n  subtitleContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginBottom: 30,\r\n  },\r\n  subtitleText: {\r\n    lineHeight: 16 * 1.7,\r\n  },\r\n  resendLink: {\r\n    color: colors.black,\r\n    lineHeight: 16 * 1.7,\r\n    marginLeft: 5,\r\n  },\r\n});\r\n"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;;;;;AAEA,SAASC,uBAAT,QAAwC,yCAAxC;AAEA,OAAOC,SAAP;AACA,OAAOC,MAAP;AACA,SAASC,MAAT,EAAiBC,UAAjB;AACA,OAAOC,MAAP;AACA,OAAOC,OAAP;;;;AAEA,eAAe,SAASC,gBAAT,OAA0C;EAAA,IAAdC,UAAc,QAAdA,UAAc;;EACvD,gBAAsBV,QAAQ,CAAC;IAAE,GAAG,EAAL;IAAS,GAAG,EAAZ;IAAgB,GAAG,EAAnB;IAAuB,GAAG,EAA1B;IAA8B,GAAG;EAAjC,CAAD,CAA9B;EAAA;EAAA,IAAOW,GAAP;EAAA,IAAYC,MAAZ;;EAEA,IAAMC,UAAU,GAAGZ,MAAM,EAAzB;EACA,IAAMa,WAAW,GAAGb,MAAM,EAA1B;EACA,IAAMc,UAAU,GAAGd,MAAM,EAAzB;EACA,IAAMe,WAAW,GAAGf,MAAM,EAA1B;EACA,OACE;IAAA,WACE,KAAC,MAAD;MACE,KAAK,EAAE;QAAEgB,eAAe,EAAEZ,MAAM,CAACa;MAA1B,CADT;MAEE,KAAK,EAAC,YAFR;MAGE,OAAO,EAAE;QAAA,OAAMR,UAAU,CAACS,MAAX,EAAN;MAAA;IAHX,EADF,EAOE,KAAC,MAAD;MAAQ,KAAK,EAAEC,MAAM,CAACC,SAAtB;MAAA,UACE,KAAC,uBAAD;QAAA,UACE,MAAC,IAAD;UAAM,KAAK,EAAED,MAAM,CAACE,mBAApB;UAAA,WACE,KAAC,OAAD;YAAS,KAAK,EAAEF,MAAM,CAACG,KAAvB;YAAA;UAAA,EADF,EAEE,MAAC,IAAD;YAAM,KAAK,EAAEH,MAAM,CAACI,cAApB;YAAA,WACE,KAAC,IAAD;cAAM,KAAK,EAAEJ,MAAM,CAACK,QAApB;cAAA,UACE,KAAC,SAAD;gBACE,KAAK,EAAEL,MAAM,CAACM,SADhB;gBAEE,YAAY,EAAC,YAFf;gBAGE,SAAS,EAAE,CAHb;gBAIE,GAAG,EAAEb,UAJP;gBAKE,YAAY,EAAE,sBAACc,IAAD,EAAU;kBACtBf,MAAM,iCAAMD,GAAN;oBAAW,GAAGgB;kBAAd,GAAN;kBACAA,IAAI,IAAIb,WAAW,CAACc,OAAZ,CAAoBC,KAApB,EAAR;gBACD;cARH;YADF,EADF,EAcE,KAAC,IAAD;cAAM,KAAK,EAAET,MAAM,CAACK,QAApB;cAAA,UACE,KAAC,SAAD;gBACE,KAAK,EAAEL,MAAM,CAACM,SADhB;gBAEE,YAAY,EAAC,YAFf;gBAGE,SAAS,EAAE,CAHb;gBAIE,GAAG,EAAEZ,WAJP;gBAKE,YAAY,EAAE,sBAACa,IAAD,EAAU;kBACtBf,MAAM,iCAAMD,GAAN;oBAAW,GAAGgB;kBAAd,GAAN;kBACAA,IAAI,GACAZ,UAAU,CAACa,OAAX,CAAmBC,KAAnB,EADA,GAEAhB,UAAU,CAACe,OAAX,CAAmBC,KAAnB,EAFJ;gBAGD;cAVH;YADF,EAdF,EA6BE,KAAC,IAAD;cAAM,KAAK,EAAET,MAAM,CAACK,QAApB;cAAA,UACE,KAAC,SAAD;gBACE,KAAK,EAAEL,MAAM,CAACM,SADhB;gBAEE,YAAY,EAAC,YAFf;gBAGE,SAAS,EAAE,CAHb;gBAIE,GAAG,EAAEX,UAJP;gBAKE,YAAY,EAAE,sBAACY,IAAD,EAAU;kBACtBf,MAAM,iCAAMD,GAAN;oBAAW,GAAGgB;kBAAd,GAAN;kBACAA,IAAI,GACAX,WAAW,CAACY,OAAZ,CAAoBC,KAApB,EADA,GAEAf,WAAW,CAACc,OAAZ,CAAoBC,KAApB,EAFJ;gBAGD;cAVH;YADF,EA7BF,EA4CE,KAAC,IAAD;cAAM,KAAK,EAAET,MAAM,CAACK,QAApB;cAAA,UACE,KAAC,SAAD;gBACE,KAAK,EAAEL,MAAM,CAACM,SADhB;gBAEE,YAAY,EAAC,YAFf;gBAGE,SAAS,EAAE,CAHb;gBAIE,GAAG,EAAEV,WAJP;gBAKE,YAAY,EAAE,sBAACW,IAAD,EAAU;kBACtBf,MAAM,iCAAMD,GAAN;oBAAW,GAAGgB;kBAAd,GAAN;gBACD;cAPH;YADF,EA5CF;UAAA,EAFF,EA2DE,MAAC,IAAD;YAAM,KAAK,EAAEP,MAAM,CAACU,iBAApB;YAAA,WACE,KAAC,OAAD;cAAS,KAAK,EAAEV,MAAM,CAACW,YAAvB;cAAA;YAAA,EADF,EAEE,KAAC,gBAAD;cAAA,UACE,KAAC,OAAD;gBAAS,MAAM,EAAC,UAAhB;gBAA2B,KAAK,EAAEX,MAAM,CAACY,UAAzC;gBAAA;cAAA;YADF,EAFF;UAAA,EA3DF,EAkEE,KAAC,SAAD;YAAW,KAAK,EAAC,QAAjB;YAA0B,OAAO,EAAE;cAAA,OAAMtB,UAAU,CAACuB,QAAX,CAAoB,qBAApB,CAAN;YAAA;UAAnC,EAlEF;QAAA;MADF;IADF,EAPF;EAAA,EADF;AAkFD;AAED,IAAMb,MAAM,GAAGc,UAAU,CAACC,MAAX,CAAkB;EAC/Bd,SAAS,EAAE;IACTJ,eAAe,EAAEZ,MAAM,CAACa,KADf;IAETkB,UAAU,EAAE,EAFH;IAGTC,iBAAiB,EAAE;EAHV,CADoB;EAM/Bf,mBAAmB,EAAE;IACnBgB,eAAe,EAAE,EADE;IAEnBD,iBAAiB,EAAE,EAFA;IAGnBpB,eAAe,EAAEZ,MAAM,CAACkC,KAHL;IAInBC,YAAY,EAAE;EAJK,CANU;EAY/BjB,KAAK,EAAE;IACLkB,YAAY,EAAE;EADT,CAZwB;EAe/BjB,cAAc,EAAE;IACdkB,aAAa,EAAE,KADD;IAEdC,UAAU,EAAE,QAFE;IAGdC,cAAc,EAAE,eAHF;IAIdH,YAAY,EAAE;EAJA,CAfe;EAqB/BhB,QAAQ,EAAE;IACRe,YAAY,EAAE,EADN;IAERvB,eAAe,EAAEZ,MAAM,CAACwC,MAFhB;IAGRC,WAAW,EAAE,CAHL;IAIRC,WAAW,EAAE1C,MAAM,CAACa;EAJZ,CArBqB;EA2B/BQ,SAAS,EAAE;IACTsB,SAAS,EAAE,QADF;IAETX,iBAAiB,EAAE,EAFV;IAGTC,eAAe,EAAE,IAHR;IAITW,QAAQ,EAAE,EAJD;IAKTC,UAAU,EAAE5C,UAAU,CAAC6C,OALd;IAMTC,KAAK,EAAE/C,MAAM,CAACgD,OANL;IAOTC,KAAK,EAAE,EAPE;IAQTd,YAAY,EAAE;EARL,CA3BoB;EAqC/BV,iBAAiB,EAAE;IACjBY,aAAa,EAAE,KADE;IAEjBC,UAAU,EAAE,QAFK;IAGjBF,YAAY,EAAE;EAHG,CArCY;EA0C/BV,YAAY,EAAE;IACZwB,UAAU,EAAE,KAAK;EADL,CA1CiB;EA6C/BvB,UAAU,EAAE;IACVoB,KAAK,EAAE/C,MAAM,CAACmD,KADJ;IAEVD,UAAU,EAAE,KAAK,GAFP;IAGVE,UAAU,EAAE;EAHF;AA7CmB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}