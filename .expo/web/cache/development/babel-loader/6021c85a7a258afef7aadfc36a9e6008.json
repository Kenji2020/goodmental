{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport { useDispatch } from 'react-redux';\nimport * as Yup from \"yup\";\nimport { auth, createUserWithEmailAndPassword, updateProfile } from \"../firebase/firebase\";\nimport { login } from \"../redux/features/userSlice\";\nimport Screen from \"../components/Screen\";\nimport { colors } from \"../theme\";\nimport Header from \"./../components/Header\";\nimport AppForm from \"./../components/form/AppForm\";\nimport AppFormField from \"./../components/form/AppFormField\";\nimport SubmitButton from \"./../components/form/SubmitButton\";\nimport AppText from \"./../components/AppText\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar validationSchema = Yup.object().shape({\n  name: Yup.string().required().label(\"Name\"),\n  email: Yup.string().required().email().label(\"Email\"),\n  password: Yup.string().required().min(6).label(\"Password\")\n});\nexport default function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      toggleCheckBox = _useState2[0],\n      setToggleCheckBox = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userInfo = _useState4[0],\n      setUserInfo = _useState4[1];\n\n  var dispatch = useDispatch();\n\n  var handleFormSubmit = function handleFormSubmit(values) {\n    var name = values.name;\n    var email = values.email;\n    var password = values.password;\n    createUserWithEmailAndPassword(auth, email, password).then(function (userCredential) {\n      var user = userCredential.user;\n      dispatch(login({\n        email: user.email,\n        uid: user.uid,\n        displayName: name\n      }));\n      updateProfile(auth.currentUser, {\n        displayName: name\n      }).then(function () {}).catch(function (error) {});\n      navigation.navigate('AccountConfirmation');\n    }).catch(function (error) {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      alert(errorMessage);\n    });\n  };\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(Header, {\n      title: \"Registro\",\n      onPress: function onPress() {\n        return navigation.goBack();\n      }\n    }), _jsxs(KeyboardAwareScrollView, {\n      contentContainerStyle: {\n        flexGrow: 1,\n        paddingHorizontal: 20,\n        paddingVertical: 20\n      },\n      showsHorizontalScrollIndicator: false,\n      children: [_jsx(View, {\n        style: styles.logoContainer\n      }), _jsx(View, {\n        style: styles.formContainer,\n        children: _jsxs(AppForm, {\n          initialValues: {\n            name: \"\",\n            email: \"\",\n            password: \"\"\n          },\n          onSubmit: handleFormSubmit,\n          validationSchema: validationSchema,\n          children: [_jsx(AppFormField, {\n            placeholderText: \"Nombre\",\n            name: \"name\"\n          }), _jsx(AppFormField, {\n            placeholderText: \"Correo electr\\xF3nico\",\n            name: \"email\"\n          }), _jsx(AppFormField, {\n            placeholderText: \"Contrase\\xF1a\",\n            name: \"password\",\n            secureTextEntry: true\n          }), _jsx(SubmitButton, {\n            title: \"Registrarse\"\n          })]\n        })\n      }), _jsx(View, {\n        style: styles.signUpLinkContainer,\n        children: _jsxs(View, {\n          style: styles.signUpTextContainer,\n          children: [_jsx(AppText, {\n            preset: \"default\",\n            children: \"\\xBFYa tienes una cuenta?\"\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return navigation.navigate(\"Login\");\n            },\n            children: _jsx(AppText, {\n              preset: \"bold\",\n              style: styles.link,\n              children: \"Inicia sesi\\xF3n\"\n            })\n          })]\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  logoContainer: {\n    marginTop: 5,\n    marginBottom: 50,\n    alignItems: \"center\"\n  },\n  signUpLinkContainer: {\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n    flex: 1,\n    flexDirection: \"row\"\n  },\n  signUpTextContainer: {\n    flexDirection: \"row\"\n  },\n  link: {\n    marginLeft: 5,\n    color: colors.primary\n  }\n});","map":{"version":3,"names":["useState","KeyboardAwareScrollView","useDispatch","Yup","auth","createUserWithEmailAndPassword","updateProfile","login","Screen","colors","Header","AppForm","AppFormField","SubmitButton","AppText","validationSchema","object","shape","name","string","required","label","email","password","min","RegisterScreen","navigation","toggleCheckBox","setToggleCheckBox","userInfo","setUserInfo","dispatch","handleFormSubmit","values","then","userCredential","user","uid","displayName","currentUser","catch","error","navigate","errorCode","code","errorMessage","message","alert","goBack","flexGrow","paddingHorizontal","paddingVertical","styles","logoContainer","formContainer","signUpLinkContainer","signUpTextContainer","link","StyleSheet","create","marginTop","marginBottom","alignItems","justifyContent","flex","flexDirection","marginLeft","color","primary"],"sources":["/Users/victorsalgado/Desktop/goodmental/src/screens/RegisterScreen.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { View, Image, StyleSheet, TouchableOpacity } from \"react-native\";\r\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\r\nimport { useDispatch } from 'react-redux';\r\nimport * as Yup from \"yup\";\r\n\r\nimport { auth, createUserWithEmailAndPassword, updateProfile } from '../firebase/firebase';\r\nimport { login } from '../redux/features/userSlice';\r\nimport Screen from \"../components/Screen\";\r\nimport { colors } from \"../theme\";\r\nimport Header from \"./../components/Header\";\r\nimport AppForm from './../components/form/AppForm';\r\nimport AppFormField from './../components/form/AppFormField';\r\nimport SubmitButton from './../components/form/SubmitButton';\r\nimport AppText from './../components/AppText';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string().required().label(\"Name\"),\r\n  email: Yup.string().required().email().label(\"Email\"),\r\n  password: Yup.string().required().min(6).label(\"Password\"),\r\n});\r\n\r\n\r\n\r\nexport default function RegisterScreen({ navigation }) {\r\n\r\n  const [toggleCheckBox, setToggleCheckBox] = useState(false);\r\n  const [userInfo, setUserInfo] = useState({});\r\n  let dispatch = useDispatch();\r\n\r\n  const handleFormSubmit = values => {\r\n    const name = values.name;\r\n    const email = values.email;\r\n    const password = values.password;\r\n\r\n\r\n    createUserWithEmailAndPassword(auth, email, password)\r\n      .then((userCredential) => {\r\n        // Signed in \r\n        const user = userCredential.user;\r\n        dispatch(login({\r\n          email: user.email,\r\n          uid: user.uid,\r\n          displayName: name,\r\n        }))\r\n        updateProfile(auth.currentUser, {\r\n          displayName: name,\r\n        }).then(() => {\r\n\r\n        }).catch((error) => {\r\n\r\n        });\r\n        navigation.navigate('AccountConfirmation')\r\n      })\r\n      .catch((error) => {\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        alert(errorMessage)\r\n      });\r\n  }\r\n  return (\r\n    <>\r\n      <Header title=\"Registro\" onPress={() => navigation.goBack()} />\r\n\r\n      <KeyboardAwareScrollView\r\n        contentContainerStyle={{\r\n          flexGrow: 1,\r\n          paddingHorizontal: 20,\r\n          paddingVertical: 20,\r\n        }}\r\n        showsHorizontalScrollIndicator={false}\r\n      >\r\n        <View style={styles.logoContainer}>\r\n        </View>\r\n        <View style={styles.formContainer}>\r\n          <AppForm\r\n            initialValues={{ name: \"\", email: \"\", password: \"\" }}\r\n\r\n            onSubmit={handleFormSubmit}\r\n            validationSchema={validationSchema}\r\n          >\r\n\r\n            <AppFormField placeholderText=\"Nombre\" name=\"name\" />\r\n\r\n            <AppFormField placeholderText=\"Correo electrónico\" name=\"email\" />\r\n\r\n            <AppFormField placeholderText=\"Contraseña\" name=\"password\" secureTextEntry />\r\n\r\n            <SubmitButton title=\"Registrarse\" />\r\n\r\n          </AppForm>\r\n        </View>\r\n\r\n\r\n        <View style={styles.signUpLinkContainer}>\r\n          <View style={styles.signUpTextContainer}>\r\n            <AppText preset=\"default\">¿Ya tienes una cuenta?</AppText>\r\n            <TouchableOpacity onPress={() => navigation.navigate(\"Login\")}>\r\n              <AppText preset=\"bold\" style={styles.link}>Inicia sesión</AppText>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n\r\n      </KeyboardAwareScrollView>\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  logoContainer: {\r\n    marginTop: 5,\r\n    marginBottom: 50,\r\n    alignItems: \"center\",\r\n  },\r\n  signUpLinkContainer: {\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-end',\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n  },\r\n  signUpTextContainer: {\r\n    flexDirection: \"row\",\r\n  },\r\n  link: {\r\n    marginLeft: 5,\r\n    color: colors.primary,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}