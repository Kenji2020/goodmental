{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { Rect } from \"./Rect.web\";\nexport var RNSharedElementContent = function () {\n  function RNSharedElementContent(element, size) {\n    _classCallCheck(this, RNSharedElementContent);\n\n    this.element = element;\n    this.size = size;\n  }\n\n  _createClass(RNSharedElementContent, null, [{\n    key: \"getSize\",\n    value: function getSize(element) {\n      return new Promise(function (resolve) {\n        if (element.style.backgroundImage) {\n          var img = document.createElement(\"img\");\n\n          img.onload = function () {\n            resolve(new Rect({\n              x: 0,\n              y: 0,\n              width: img.width,\n              height: img.height\n            }));\n          };\n\n          img.onerror = function () {\n            return resolve(null);\n          };\n\n          var url = element.style.backgroundImage;\n          img.src = url.substring(5, url.length - 2);\n          return;\n        }\n\n        resolve(new Rect({\n          x: 0,\n          y: 0,\n          width: element.clientWidth || 0,\n          height: element.clientHeight || 0\n        }));\n      });\n    }\n  }, {\n    key: \"getLayout\",\n    value: function getLayout(layout, content, resizeMode, reverse) {\n      if (!content) return layout;\n      if (!content.element.style.backgroundImage) return layout;\n      var width = layout.width,\n          height = layout.height;\n      var contentAspectRatio = content.size.width / content.size.height;\n      var lo = width / height < contentAspectRatio;\n      var aspectRatioCriteria = reverse ? !lo : lo;\n\n      switch (resizeMode) {\n        case \"stretch\":\n        case \"100% 100%\":\n          break;\n\n        case \"cover\":\n          if (aspectRatioCriteria) {\n            width = height * contentAspectRatio;\n          } else {\n            height = width / contentAspectRatio;\n          }\n\n          break;\n\n        case \"center\":\n          width = content.size.width;\n          height = content.size.height;\n          break;\n\n        case \"contain\":\n        default:\n          if (aspectRatioCriteria) {\n            height = width / contentAspectRatio;\n          } else {\n            width = height * contentAspectRatio;\n          }\n\n          break;\n      }\n\n      return new Rect({\n        x: layout.x + (layout.width - width) / 2,\n        y: layout.y + (layout.height - height) / 2,\n        width: width,\n        height: height\n      });\n    }\n  }]);\n\n  return RNSharedElementContent;\n}();","map":{"version":3,"sources":["../../src/web/RNSharedElementContent.web.ts"],"names":[],"mappings":";;AAAA,SAAS,IAAT;AAGA,WAAa,sBAAb;EAIE,gCAAY,OAAZ,EAAmC,IAAnC,EAA6C;IAAA;;IAC3C,KAAK,OAAL,GAAe,OAAf;IACA,KAAK,IAAL,GAAY,IAAZ;EACD;;EAPH;IAAA;IAAA,OASE,iBAAe,OAAf,EAAoC;MAClC,OAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAY;QAC7B,IAAI,OAAO,CAAC,KAAR,CAAc,eAAlB,EAAmC;UACjC,IAAM,GAAG,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAZ;;UACA,GAAG,CAAC,MAAJ,GAAa,YAAK;YAChB,OAAO,CACL,IAAI,IAAJ,CAAS;cACP,CAAC,EAAE,CADI;cAEP,CAAC,EAAE,CAFI;cAGP,KAAK,EAAE,GAAG,CAAC,KAHJ;cAIP,MAAM,EAAE,GAAG,CAAC;YAJL,CAAT,CADK,CAAP;UAQD,CATD;;UAUA,GAAG,CAAC,OAAJ,GAAc;YAAA,OAAM,OAAO,CAAC,IAAD,CAAb;UAAA,CAAd;;UACA,IAAM,GAAG,GAAG,OAAO,CAAC,KAAR,CAAc,eAA1B;UACA,GAAG,CAAC,GAAJ,GAAU,GAAG,CAAC,SAAJ,CAAc,CAAd,EAAiB,GAAG,CAAC,MAAJ,GAAa,CAA9B,CAAV;UACA;QACD;;QACD,OAAO,CACL,IAAI,IAAJ,CAAS;UACP,CAAC,EAAE,CADI;UAEP,CAAC,EAAE,CAFI;UAGP,KAAK,EAAE,OAAO,CAAC,WAAR,IAAuB,CAHvB;UAIP,MAAM,EAAE,OAAO,CAAC,YAAR,IAAwB;QAJzB,CAAT,CADK,CAAP;MAQD,CA1BM,CAAP;IA2BD;EArCH;IAAA;IAAA,OAuCE,mBACE,MADF,EAEE,OAFF,EAGE,UAHF,EAIE,OAJF,EAImB;MAEjB,IAAI,CAAC,OAAL,EAAc,OAAO,MAAP;MACd,IAAI,CAAC,OAAO,CAAC,OAAR,CAAgB,KAAhB,CAAsB,eAA3B,EAA4C,OAAO,MAAP;MAC5C,IAAM,KAAN,GAAwB,MAAxB,CAAM,KAAN;MAAA,IAAa,MAAb,GAAwB,MAAxB,CAAa,MAAb;MACA,IAAM,kBAAkB,GAAG,OAAO,CAAC,IAAR,CAAa,KAAb,GAAqB,OAAO,CAAC,IAAR,CAAa,MAA7D;MACA,IAAM,EAAE,GAAG,KAAK,GAAG,MAAR,GAAiB,kBAA5B;MACA,IAAM,mBAAmB,GAAG,OAAO,GAAG,CAAC,EAAJ,GAAS,EAA5C;;MACA,QAAQ,UAAR;QACE,KAAK,SAAL;QACA,KAAK,WAAL;UAEE;;QACF,KAAK,OAAL;UACE,IAAI,mBAAJ,EAAyB;YACvB,KAAK,GAAG,MAAM,GAAG,kBAAjB;UACD,CAFD,MAEO;YACL,MAAM,GAAG,KAAK,GAAG,kBAAjB;UACD;;UACD;;QACF,KAAK,QAAL;UACE,KAAK,GAAG,OAAO,CAAC,IAAR,CAAa,KAArB;UACA,MAAM,GAAG,OAAO,CAAC,IAAR,CAAa,MAAtB;UACA;;QACF,KAAK,SAAL;QACA;UACE,IAAI,mBAAJ,EAAyB;YACvB,MAAM,GAAG,KAAK,GAAG,kBAAjB;UACD,CAFD,MAEO;YACL,KAAK,GAAG,MAAM,GAAG,kBAAjB;UACD;;UACD;MAvBJ;;MAyBA,OAAO,IAAI,IAAJ,CAAS;QACd,CAAC,EAAE,MAAM,CAAC,CAAP,GAAW,CAAC,MAAM,CAAC,KAAP,GAAe,KAAhB,IAAyB,CADzB;QAEd,CAAC,EAAE,MAAM,CAAC,CAAP,GAAW,CAAC,MAAM,CAAC,MAAP,GAAgB,MAAjB,IAA2B,CAF3B;QAGd,KAAK,EAAL,KAHc;QAId,MAAM,EAAN;MAJc,CAAT,CAAP;IAMD;EAlFH;;EAAA;AAAA","sourcesContent":["import { Rect } from \"./Rect.web\";\nimport { IHTMLElement } from \"./types\";\n\nexport class RNSharedElementContent {\n  public readonly element: IHTMLElement;\n  public readonly size: Rect;\n\n  constructor(element: IHTMLElement, size: Rect) {\n    this.element = element;\n    this.size = size;\n  }\n\n  static getSize(element: IHTMLElement): Promise<Rect | null> {\n    return new Promise((resolve) => {\n      if (element.style.backgroundImage) {\n        const img = document.createElement(\"img\");\n        img.onload = () => {\n          resolve(\n            new Rect({\n              x: 0,\n              y: 0,\n              width: img.width,\n              height: img.height,\n            })\n          );\n        };\n        img.onerror = () => resolve(null);\n        const url = element.style.backgroundImage;\n        img.src = url.substring(5, url.length - 2);\n        return;\n      }\n      resolve(\n        new Rect({\n          x: 0,\n          y: 0,\n          width: element.clientWidth || 0,\n          height: element.clientHeight || 0,\n        })\n      );\n    });\n  }\n\n  static getLayout(\n    layout: Rect,\n    content: RNSharedElementContent | null,\n    resizeMode: string,\n    reverse?: boolean\n  ) {\n    if (!content) return layout;\n    if (!content.element.style.backgroundImage) return layout;\n    let { width, height } = layout;\n    const contentAspectRatio = content.size.width / content.size.height;\n    const lo = width / height < contentAspectRatio;\n    const aspectRatioCriteria = reverse ? !lo : lo;\n    switch (resizeMode) {\n      case \"stretch\":\n      case \"100% 100%\":\n        // nop\n        break;\n      case \"cover\":\n        if (aspectRatioCriteria) {\n          width = height * contentAspectRatio;\n        } else {\n          height = width / contentAspectRatio;\n        }\n        break;\n      case \"center\":\n        width = content.size.width;\n        height = content.size.height;\n        break;\n      case \"contain\":\n      default:\n        if (aspectRatioCriteria) {\n          height = width / contentAspectRatio;\n        } else {\n          width = height * contentAspectRatio;\n        }\n        break;\n    }\n    return new Rect({\n      x: layout.x + (layout.width - width) / 2,\n      y: layout.y + (layout.height - height) / 2,\n      width,\n      height,\n    });\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}