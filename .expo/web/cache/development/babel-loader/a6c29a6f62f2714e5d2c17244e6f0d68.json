{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"SharedElementComponent\", \"start\", \"end\", \"position\", \"animation\", \"resize\", \"align\", \"onMeasure\", \"debug\"];\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport processColor from \"react-native-web/dist/exports/processColor\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { RNSharedElementTransitionView } from \"./RNSharedElementTransitionView\";\nvar NativeAnimationType = new Map([[\"move\", 0], [\"fade\", 1], [\"fade-in\", 2], [\"fade-out\", 3]]);\nvar NativeResizeType = new Map([[\"auto\", 0], [\"stretch\", 1], [\"clip\", 2], [\"none\", 3]]);\nvar NativeAlignType = new Map([[\"auto\", 0], [\"left-top\", 1], [\"left-center\", 2], [\"left-bottom\", 3], [\"right-top\", 4], [\"right-center\", 5], [\"right-bottom\", 6], [\"center-top\", 7], [\"center-center\", 8], [\"center-bottom\", 9]]);\nvar debugColors = {\n  startNode: \"#82B2E8\",\n  endNode: \"#5EFF9B\",\n  pink: \"#DC9CFF\",\n  startAncestor: \"#E88F82\",\n  endAncestor: \"#FFDC8F\"\n};\nvar debugStyles = StyleSheet.create({\n  overlay: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    backgroundColor: \"black\",\n    opacity: 0.3\n  }),\n  text: {\n    marginLeft: 3,\n    marginTop: 3,\n    fontSize: 10\n  },\n  box: {\n    position: \"absolute\",\n    borderWidth: 1,\n    borderStyle: \"dashed\"\n  }\n});\nexport var RNAnimatedSharedElementTransitionView = RNSharedElementTransitionView ? Animated.createAnimatedComponent(RNSharedElementTransitionView) : undefined;\nexport var SharedElementTransition = function (_React$Component) {\n  _inherits(SharedElementTransition, _React$Component);\n\n  var _super = _createSuper(SharedElementTransition);\n\n  function SharedElementTransition(props) {\n    var _this;\n\n    _classCallCheck(this, SharedElementTransition);\n\n    _this = _super.call(this, props);\n    _this.state = {};\n\n    _this.onMeasureNode = function (event) {\n      var nativeEvent = event.nativeEvent;\n      var onMeasure = _this.props.onMeasure;\n\n      _this.setState(_defineProperty({}, \"\" + nativeEvent.node, nativeEvent));\n\n      if (onMeasure) {\n        onMeasure(event);\n      }\n    };\n\n    if (!props.SharedElementComponent && !SharedElementTransition.isNotAvailableWarningShown) {\n      SharedElementTransition.isNotAvailableWarningShown = true;\n\n      if (Platform.OS === \"android\" || Platform.OS === \"ios\") {\n        console.warn(\"RNSharedElementTransition is not available, did you forget to link `react-native-shared-element` into your project?\");\n      } else {\n        console.warn(\"RNSharedElementTransition is not available on this platform\");\n      }\n    }\n\n    return _this;\n  }\n\n  _createClass(SharedElementTransition, [{\n    key: \"renderDebugOverlay\",\n    value: function renderDebugOverlay() {\n      if (!this.props.debug) {\n        return;\n      }\n\n      return React.createElement(View, {\n        style: debugStyles.overlay\n      });\n    }\n  }, {\n    key: \"renderDebugLayer\",\n    value: function renderDebugLayer(name) {\n      var event = this.state[name];\n      if (!event || !this.props.debug) return;\n      var layout = event.layout,\n          style = event.style;\n      var isContentDifferent = layout.x !== layout.contentX || layout.y !== layout.contentY || layout.width !== layout.contentWidth || layout.height !== layout.contentHeight;\n      var isFullScreen = layout.visibleX === 0 && layout.visibleY === 0 && layout.visibleWidth === Dimensions.get(\"window\").width && layout.visibleHeight === Dimensions.get(\"window\").height;\n      var color = debugColors[name];\n      return React.createElement(View, {\n        style: StyleSheet.absoluteFill\n      }, isContentDifferent ? React.createElement(View, {\n        style: [debugStyles.box, {\n          left: layout.contentX,\n          top: layout.contentY,\n          width: layout.contentWidth,\n          height: layout.contentHeight,\n          borderColor: color,\n          opacity: 0.5\n        }]\n      }, React.createElement(Text, {\n        style: [debugStyles.text, {\n          color: color\n        }]\n      }, \"Content\")) : undefined, React.createElement(View, {\n        style: [debugStyles.box, {\n          left: layout.x,\n          top: layout.y,\n          width: layout.width,\n          height: layout.height,\n          borderColor: color,\n          borderRadius: style.borderRadius || 0\n        }]\n      }, React.createElement(Text, {\n        style: [debugStyles.text, {\n          color: color,\n          marginTop: Math.max((style.borderRadius || 0) - 7, 3)\n        }]\n      }, name)), React.createElement(View, {\n        style: {\n          position: \"absolute\",\n          overflow: \"hidden\",\n          left: layout.visibleX,\n          top: layout.visibleY,\n          width: layout.visibleWidth,\n          height: layout.visibleHeight\n        }\n      }, React.createElement(View, {\n        style: [{\n          position: \"absolute\",\n          left: layout.x - layout.visibleX,\n          top: layout.y - layout.visibleY,\n          width: layout.width,\n          height: layout.height,\n          borderRadius: style.borderRadius || 0,\n          backgroundColor: isFullScreen ? \"transparent\" : color + \"80\"\n        }]\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          SharedElementComponent = _this$props.SharedElementComponent,\n          start = _this$props.start,\n          end = _this$props.end,\n          position = _this$props.position,\n          animation = _this$props.animation,\n          resize = _this$props.resize,\n          align = _this$props.align,\n          onMeasure = _this$props.onMeasure,\n          debug = _this$props.debug,\n          otherProps = _objectWithoutProperties(_this$props, _excluded);\n\n      if (!SharedElementComponent) {\n        return null;\n      }\n\n      return React.createElement(View, {\n        style: StyleSheet.absoluteFill\n      }, React.createElement(SharedElementComponent, _objectSpread({\n        startNode: {\n          node: SharedElementTransition.prepareNode(start.node),\n          ancestor: SharedElementTransition.prepareNode(start.ancestor)\n        },\n        endNode: {\n          node: SharedElementTransition.prepareNode(end.node),\n          ancestor: SharedElementTransition.prepareNode(end.ancestor)\n        },\n        nodePosition: position,\n        animation: NativeAnimationType.get(animation),\n        resize: NativeResizeType.get(resize),\n        align: NativeAlignType.get(align),\n        onMeasureNode: debug ? this.onMeasureNode : onMeasure\n      }, otherProps)), this.renderDebugLayer(\"startNode\"), this.renderDebugLayer(\"endNode\"));\n    }\n  }], [{\n    key: \"prepareNode\",\n    value: function prepareNode(node) {\n      var nodeStyle = {};\n\n      if (Platform.OS === \"android\" && node && node.parentInstance) {\n        var child = React.Children.only(node.parentInstance.props.children);\n        var props = child ? child.props : {};\n        nodeStyle = StyleSheet.flatten([props.style]) || {};\n        delete nodeStyle.transform;\n        delete nodeStyle.opacity;\n        nodeStyle.resizeMode = nodeStyle.resizeMode || props.resizeMode;\n        if (nodeStyle.backgroundColor) nodeStyle.backgroundColor = processColor(nodeStyle.backgroundColor);\n        if (nodeStyle.borderColor) nodeStyle.borderColor = processColor(nodeStyle.borderColor);\n        if (nodeStyle.color) nodeStyle.color = processColor(nodeStyle.color);\n      }\n\n      return node ? {\n        nodeHandle: node.nodeHandle,\n        isParent: node.isParent,\n        nodeStyle: nodeStyle\n      } : undefined;\n    }\n  }]);\n\n  return SharedElementTransition;\n}(React.Component);\nSharedElementTransition.defaultProps = {\n  start: {},\n  end: {},\n  SharedElementComponent: RNAnimatedSharedElementTransitionView,\n  animation: \"move\",\n  resize: \"auto\",\n  align: \"auto\"\n};\nSharedElementTransition.isNotAvailableWarningShown = false;","map":{"version":3,"sources":["../src/SharedElementTransition.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  View,\n  Text,\n  Animated,\n  Dimensions,\n  StyleSheet,\n  processColor,\n  Platform,\n} from \"react-native\";\n\nimport { RNSharedElementTransitionView } from \"./RNSharedElementTransitionView\";\nimport {\n  SharedElementNode,\n  SharedElementAnimation,\n  SharedElementResize,\n  SharedElementAlign,\n  SharedElementNodeType,\n  SharedElementContentType,\n} from \"./types\";\n\nexport type SharedElementMeasureData = {\n  node: SharedElementNodeType;\n  layout: {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    visibleX: number;\n    visibleY: number;\n    visibleWidth: number;\n    visibleHeight: number;\n    contentX: number;\n    contentY: number;\n    contentWidth: number;\n    contentHeight: number;\n  };\n  contentType: SharedElementContentType;\n  style: {\n    borderRadius: number;\n  };\n};\n\nexport type SharedElementOnMeasureEvent = {\n  nativeEvent: SharedElementMeasureData;\n};\n\nexport type SharedElementTransitionProps = {\n  start: {\n    node: SharedElementNode | null;\n    ancestor: SharedElementNode | null;\n  };\n  end: {\n    node: SharedElementNode | null;\n    ancestor: SharedElementNode | null;\n  };\n  position: number | any | void;\n  animation: SharedElementAnimation;\n  resize?: SharedElementResize;\n  align?: SharedElementAlign;\n  debug?: boolean;\n  style?: any;\n  onMeasure?: (event: SharedElementOnMeasureEvent) => void;\n  SharedElementComponent?: any;\n};\n\nconst NativeAnimationType = new Map<SharedElementAnimation, number>([\n  [\"move\", 0],\n  [\"fade\", 1],\n  [\"fade-in\", 2],\n  [\"fade-out\", 3],\n]);\n\nconst NativeResizeType = new Map<SharedElementResize, number>([\n  [\"auto\", 0],\n  [\"stretch\", 1],\n  [\"clip\", 2],\n  [\"none\", 3],\n]);\n\nconst NativeAlignType = new Map<SharedElementAlign, number>([\n  [\"auto\", 0],\n  [\"left-top\", 1],\n  [\"left-center\", 2],\n  [\"left-bottom\", 3],\n  [\"right-top\", 4],\n  [\"right-center\", 5],\n  [\"right-bottom\", 6],\n  [\"center-top\", 7],\n  [\"center-center\", 8],\n  [\"center-bottom\", 9],\n]);\n\nconst debugColors = {\n  startNode: \"#82B2E8\",\n  endNode: \"#5EFF9B\",\n  pink: \"#DC9CFF\",\n  startAncestor: \"#E88F82\",\n  endAncestor: \"#FFDC8F\",\n};\n\nconst debugStyles = StyleSheet.create({\n  overlay: {\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: \"black\",\n    opacity: 0.3,\n  },\n  text: {\n    marginLeft: 3,\n    marginTop: 3,\n    fontSize: 10,\n  },\n  box: {\n    position: \"absolute\",\n    borderWidth: 1,\n    borderStyle: \"dashed\",\n  },\n});\n\ntype StateType = {\n  startNode?: SharedElementMeasureData;\n  endNode?: SharedElementMeasureData;\n  startAncestor?: SharedElementMeasureData;\n  endAncestor?: SharedElementMeasureData;\n};\n\nexport const RNAnimatedSharedElementTransitionView =\n  RNSharedElementTransitionView\n    ? Animated.createAnimatedComponent(RNSharedElementTransitionView)\n    : undefined;\n\nexport class SharedElementTransition extends React.Component<\n  SharedElementTransitionProps,\n  StateType\n> {\n  static prepareNode(node: SharedElementNode | null): any {\n    let nodeStyle: any = {};\n    if (Platform.OS === \"android\" && node && node.parentInstance) {\n      const child = React.Children.only(node.parentInstance.props.children);\n      const props = child ? child.props : {};\n      nodeStyle = StyleSheet.flatten([props.style]) || {};\n      delete nodeStyle.transform;\n      delete nodeStyle.opacity;\n      nodeStyle.resizeMode = nodeStyle.resizeMode || props.resizeMode;\n      if (nodeStyle.backgroundColor)\n        nodeStyle.backgroundColor = processColor(nodeStyle.backgroundColor);\n      if (nodeStyle.borderColor)\n        nodeStyle.borderColor = processColor(nodeStyle.borderColor);\n      if (nodeStyle.color) nodeStyle.color = processColor(nodeStyle.color);\n    }\n    return node\n      ? {\n          nodeHandle: node.nodeHandle,\n          isParent: node.isParent,\n          nodeStyle,\n        }\n      : undefined;\n  }\n\n  static defaultProps = {\n    start: {},\n    end: {},\n    SharedElementComponent: RNAnimatedSharedElementTransitionView,\n    animation: \"move\",\n    resize: \"auto\",\n    align: \"auto\",\n  };\n\n  constructor(props: SharedElementTransitionProps) {\n    super(props);\n    if (\n      !props.SharedElementComponent &&\n      !SharedElementTransition.isNotAvailableWarningShown\n    ) {\n      SharedElementTransition.isNotAvailableWarningShown = true;\n      if (Platform.OS === \"android\" || Platform.OS === \"ios\") {\n        console.warn(\n          \"RNSharedElementTransition is not available, did you forget to link `react-native-shared-element` into your project?\"\n        );\n      } else {\n        console.warn(\n          \"RNSharedElementTransition is not available on this platform\"\n        );\n      }\n    }\n  }\n\n  state: StateType = {};\n\n  private static isNotAvailableWarningShown = false;\n\n  onMeasureNode = (event: SharedElementOnMeasureEvent) => {\n    const { nativeEvent } = event;\n    const { onMeasure } = this.props;\n    this.setState({\n      [`${nativeEvent.node}`]: nativeEvent,\n    });\n    // console.log(\"onMeasure: \", nativeEvent);\n    if (onMeasure) {\n      onMeasure(event);\n    }\n  };\n\n  renderDebugOverlay() {\n    if (!this.props.debug) {\n      return;\n    }\n    return <View style={debugStyles.overlay} />;\n  }\n\n  renderDebugLayer(name: SharedElementNodeType) {\n    const event = this.state[name];\n    if (!event || !this.props.debug) return;\n    const { layout, style } = event;\n    const isContentDifferent =\n      layout.x !== layout.contentX ||\n      layout.y !== layout.contentY ||\n      layout.width !== layout.contentWidth ||\n      layout.height !== layout.contentHeight;\n    const isFullScreen =\n      layout.visibleX === 0 &&\n      layout.visibleY === 0 &&\n      layout.visibleWidth === Dimensions.get(\"window\").width &&\n      layout.visibleHeight === Dimensions.get(\"window\").height;\n\n    const color = debugColors[name];\n    return (\n      <View style={StyleSheet.absoluteFill}>\n        {isContentDifferent ? (\n          <View\n            style={[\n              debugStyles.box,\n              {\n                left: layout.contentX,\n                top: layout.contentY,\n                width: layout.contentWidth,\n                height: layout.contentHeight,\n                borderColor: color,\n                opacity: 0.5,\n              },\n            ]}\n          >\n            <Text style={[debugStyles.text, { color }]}>Content</Text>\n          </View>\n        ) : undefined}\n        <View\n          style={[\n            debugStyles.box,\n            {\n              left: layout.x,\n              top: layout.y,\n              width: layout.width,\n              height: layout.height,\n              borderColor: color,\n              borderRadius: style.borderRadius || 0,\n            },\n          ]}\n        >\n          <Text\n            style={[\n              debugStyles.text,\n              { color, marginTop: Math.max((style.borderRadius || 0) - 7, 3) },\n            ]}\n          >\n            {name}\n          </Text>\n        </View>\n        <View\n          style={{\n            position: \"absolute\",\n            overflow: \"hidden\",\n            left: layout.visibleX,\n            top: layout.visibleY,\n            width: layout.visibleWidth,\n            height: layout.visibleHeight,\n          }}\n        >\n          <View\n            style={[\n              {\n                position: \"absolute\",\n                left: layout.x - layout.visibleX,\n                top: layout.y - layout.visibleY,\n                width: layout.width,\n                height: layout.height,\n                borderRadius: style.borderRadius || 0,\n                backgroundColor: isFullScreen ? \"transparent\" : color + \"80\",\n              },\n            ]}\n          />\n        </View>\n      </View>\n    );\n  }\n\n  render() {\n    const {\n      SharedElementComponent,\n      start,\n      end,\n      position,\n      animation,\n      resize,\n      align,\n      onMeasure,\n      debug,\n      // style,\n      ...otherProps\n    } = this.props;\n    if (!SharedElementComponent) {\n      return null;\n    }\n    return (\n      <View style={StyleSheet.absoluteFill}>\n        <SharedElementComponent\n          startNode={{\n            node: SharedElementTransition.prepareNode(start.node),\n            ancestor: SharedElementTransition.prepareNode(start.ancestor),\n          }}\n          endNode={{\n            node: SharedElementTransition.prepareNode(end.node),\n            ancestor: SharedElementTransition.prepareNode(end.ancestor),\n          }}\n          nodePosition={position}\n          animation={NativeAnimationType.get(animation)}\n          // @ts-ignore\n          resize={NativeResizeType.get(resize)}\n          // @ts-ignore\n          align={NativeAlignType.get(align)}\n          onMeasureNode={debug ? this.onMeasureNode : onMeasure}\n          // style={debug && style ? [debugStyles.content, style] : style}\n          {...otherProps}\n        />\n        {/*this.renderDebugOverlay()*/}\n        {this.renderDebugLayer(\"startNode\")}\n        {this.renderDebugLayer(\"endNode\")}\n      </View>\n    );\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}