{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar react_native_1 = require(\"react-native-web/dist/index\");\n\nvar picker_1 = require(\"@react-native-picker/picker\");\n\nvar country_1 = __importDefault(require(\"./country\"));\n\nvar styles_1 = __importDefault(require(\"./styles\"));\n\nvar PickerItem = picker_1.Picker.Item;\n\nvar CountryPicker = function (_react_1$Component) {\n  _inherits(CountryPicker, _react_1$Component);\n\n  var _super = _createSuper(CountryPicker);\n\n  function CountryPicker(props) {\n    var _this;\n\n    _classCallCheck(this, CountryPicker);\n\n    _this = _super.call(this, props);\n\n    _this.onPressCancel = function () {\n      if (_this.props.onPressCancel) {\n        _this.props.onPressCancel();\n      }\n\n      _this.setState({\n        modalVisible: false\n      });\n    };\n\n    _this.onPressSubmit = function () {\n      if (_this.props.onPressConfirm) {\n        _this.props.onPressConfirm();\n      }\n\n      if (_this.props.onSubmit) {\n        _this.props.onSubmit(_this.state.selectedCountry);\n      }\n\n      _this.setState({\n        modalVisible: false\n      });\n    };\n\n    _this.onValueChange = function (selectedCountry) {\n      _this.setState({\n        selectedCountry: selectedCountry\n      });\n    };\n\n    _this.state = {\n      buttonColor: _this.props.buttonColor || '#007AFF',\n      modalVisible: false,\n      selectedCountry: _this.props.selectedCountry || country_1.default.getAll()[0]\n    };\n    return _this;\n  }\n\n  _createClass(CountryPicker, [{\n    key: \"selectCountry\",\n    value: function selectCountry(selectedCountry) {\n      this.setState({\n        selectedCountry: selectedCountry\n      });\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      this.setState({\n        modalVisible: true\n      });\n    }\n  }, {\n    key: \"renderItem\",\n    value: function renderItem(country, index) {\n      return react_1.default.createElement(PickerItem, {\n        key: country.iso2,\n        value: country.iso2,\n        label: country.name\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var buttonColor = this.state.buttonColor;\n      var itemStyle = this.props.itemStyle || {};\n      return react_1.default.createElement(react_native_1.Modal, {\n        animationType: \"slide\",\n        transparent: true,\n        visible: this.state.modalVisible,\n        onRequestClose: function onRequestClose() {\n          console.log('Country picker has been closed.');\n        }\n      }, react_1.default.createElement(react_native_1.View, {\n        style: styles_1.default.basicContainer\n      }, react_1.default.createElement(react_native_1.View, {\n        style: [styles_1.default.modalContainer, {\n          backgroundColor: this.props.pickerBackgroundColor || 'white'\n        }]\n      }, react_1.default.createElement(react_native_1.View, {\n        style: styles_1.default.buttonView\n      }, react_1.default.createElement(react_native_1.TouchableOpacity, {\n        onPress: this.onPressCancel\n      }, react_1.default.createElement(react_native_1.Text, {\n        style: [{\n          color: buttonColor\n        }, this.props.cancelTextStyle]\n      }, this.props.cancelText || 'Cancel')), react_1.default.createElement(react_native_1.TouchableOpacity, {\n        onPress: this.onPressSubmit\n      }, react_1.default.createElement(react_native_1.Text, {\n        style: [{\n          color: buttonColor\n        }, this.props.confirmTextStyle]\n      }, this.props.confirmText || 'Confirm'))), react_1.default.createElement(react_native_1.View, {\n        style: styles_1.default.mainBox\n      }, react_1.default.createElement(picker_1.Picker, {\n        ref: function ref(_ref) {\n          _this2.picker = _ref;\n        },\n        style: styles_1.default.bottomPicker,\n        selectedValue: this.state.selectedCountry,\n        onValueChange: function onValueChange(country) {\n          return _this2.onValueChange(country);\n        },\n        itemStyle: itemStyle,\n        mode: \"dialog\"\n      }, country_1.default.getAll().map(function (country, index) {\n        return _this2.renderItem(country, index);\n      }))))));\n    }\n  }]);\n\n  return CountryPicker;\n}(react_1.Component);\n\nexports.default = CountryPicker;","map":{"version":3,"sources":["../src/CountryPicker.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Component } from 'react'; // eslint-disable-line import/no-extraneous-dependencies, no-use-before-define\nimport {\n    Text, TouchableOpacity, View, Modal,\n} from 'react-native';\nimport { Picker } from '@react-native-picker/picker';\n\nimport Country from './country';\nimport styles from './styles';\nimport { ReactNativeCountryPickerProps, ReactNativeCountryPickerState } from './typings';\n\nconst PickerItem = Picker.Item;\n\nexport default class CountryPicker extends Component<ReactNativeCountryPickerProps, ReactNativeCountryPickerState> {\n    private picker: any;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            buttonColor: this.props.buttonColor || '#007AFF',\n            modalVisible: false,\n            selectedCountry: this.props.selectedCountry || Country.getAll()[0],\n        };\n    }\n\n    selectCountry(selectedCountry) {\n        this.setState({\n            selectedCountry,\n        });\n    }\n\n    onPressCancel = () => {\n        if (this.props.onPressCancel) {\n            this.props.onPressCancel();\n        }\n\n        this.setState({\n            modalVisible: false,\n        });\n    }\n\n    onPressSubmit = () => {\n        if (this.props.onPressConfirm) {\n            this.props.onPressConfirm();\n        }\n\n        if (this.props.onSubmit) {\n            this.props.onSubmit(this.state.selectedCountry);\n        }\n\n        this.setState({\n            modalVisible: false,\n        });\n    }\n\n    onValueChange = (selectedCountry) => {\n        this.setState({\n            selectedCountry,\n        });\n    }\n\n    show() {\n        this.setState({\n            modalVisible: true,\n        });\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    renderItem(country, index) {\n        return <PickerItem key={country.iso2} value={country.iso2} label={country.name} />;\n    }\n\n    render() {\n        const { buttonColor } = this.state;\n        const itemStyle = this.props.itemStyle || {};\n        return (\n            <Modal\n                animationType=\"slide\"\n                transparent\n                visible={this.state.modalVisible}\n                onRequestClose={() => {\n                    console.log('Country picker has been closed.');\n                }}\n            >\n                <View style={styles.basicContainer}>\n                    <View\n                        style={[\n                            styles.modalContainer,\n                            { backgroundColor: this.props.pickerBackgroundColor || 'white' },\n                        ]}\n                    >\n                        <View style={styles.buttonView}>\n                            <TouchableOpacity onPress={this.onPressCancel}>\n                                <Text style={[{ color: buttonColor }, this.props.cancelTextStyle]}>\n                                    {this.props.cancelText || 'Cancel'}\n                                </Text>\n                            </TouchableOpacity>\n\n                            <TouchableOpacity onPress={this.onPressSubmit}>\n                                <Text style={[{ color: buttonColor }, this.props.confirmTextStyle]}>\n                                    {this.props.confirmText || 'Confirm'}\n                                </Text>\n                            </TouchableOpacity>\n                        </View>\n\n                        <View style={styles.mainBox}>\n                            <Picker\n                                ref={(ref) => {\n                                    this.picker = ref;\n                                }}\n                                style={styles.bottomPicker}\n                                selectedValue={this.state.selectedCountry}\n                                onValueChange={(country) => this.onValueChange(country)}\n                                itemStyle={itemStyle}\n                                mode=\"dialog\"\n                            >\n                                {Country.getAll().map((country, index) => this.renderItem(country, index))}\n                            </Picker>\n                        </View>\n                    </View>\n                </View>\n            </Modal>\n        );\n    }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}