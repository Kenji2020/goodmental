{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { RNSharedElementNode } from \"./RNSharedElementNode.web\";\nexport var RNSharedElementNodeManager = function () {\n  function RNSharedElementNodeManager() {\n    _classCallCheck(this, RNSharedElementNodeManager);\n\n    this.nodes = new Map();\n  }\n\n  _createClass(RNSharedElementNodeManager, [{\n    key: \"acquire\",\n    value: function acquire(domNode, isParent, ancestorDomNode) {\n      var node = this.nodes.get(domNode);\n\n      if (node) {\n        node.addRef();\n        return node;\n      }\n\n      node = new RNSharedElementNode(domNode, isParent, ancestorDomNode);\n      this.nodes.set(domNode, node);\n      return node;\n    }\n  }, {\n    key: \"release\",\n    value: function release(node) {\n      var refCount = node.releaseRef();\n\n      if (!refCount) {\n        this.nodes.delete(node.domNode);\n      }\n\n      return refCount;\n    }\n  }], [{\n    key: \"getInstance\",\n    value: function getInstance() {\n      if (!RNSharedElementNodeManager.instance) {\n        RNSharedElementNodeManager.instance = new RNSharedElementNodeManager();\n      }\n\n      return RNSharedElementNodeManager.instance;\n    }\n  }]);\n\n  return RNSharedElementNodeManager;\n}();","map":{"version":3,"sources":["../../src/web/RNSharedElementNodeManager.web.ts"],"names":[],"mappings":";;AAAA,SAAS,mBAAT;AAGA,WAAa,0BAAb;EAAA;IAAA;;IAAA,KACU,KADV,GACkB,IAAI,GAAJ,EADlB;EAAA;;EAAA;IAAA;IAAA,OAWE,iBACE,OADF,EAEE,QAFF,EAGE,eAHF,EAG+B;MAE7B,IAAI,IAAI,GAAG,KAAK,KAAL,CAAW,GAAX,CAAe,OAAf,CAAX;;MACA,IAAI,IAAJ,EAAU;QACR,IAAI,CAAC,MAAL;QACA,OAAO,IAAP;MACD;;MACD,IAAI,GAAG,IAAI,mBAAJ,CAAwB,OAAxB,EAAiC,QAAjC,EAA2C,eAA3C,CAAP;MACA,KAAK,KAAL,CAAW,GAAX,CAAe,OAAf,EAAwB,IAAxB;MACA,OAAO,IAAP;IACD;EAxBH;IAAA;IAAA,OA0BE,iBAAQ,IAAR,EAAiC;MAC/B,IAAM,QAAQ,GAAG,IAAI,CAAC,UAAL,EAAjB;;MACA,IAAI,CAAC,QAAL,EAAe;QACb,KAAK,KAAL,CAAW,MAAX,CAAkB,IAAI,CAAC,OAAvB;MACD;;MACD,OAAO,QAAP;IACD;EAhCH;IAAA;IAAA,OAIE,uBAAkB;MAChB,IAAI,CAAC,0BAA0B,CAAC,QAAhC,EAA0C;QACxC,0BAA0B,CAAC,QAA3B,GAAsC,IAAI,0BAAJ,EAAtC;MACD;;MACD,OAAO,0BAA0B,CAAC,QAAlC;IACD;EATH;;EAAA;AAAA","sourcesContent":["import { RNSharedElementNode } from \"./RNSharedElementNode.web\";\nimport { IHTMLElement } from \"./types\";\n\nexport class RNSharedElementNodeManager {\n  private nodes = new Map<HTMLElement, RNSharedElementNode>();\n  private static instance: RNSharedElementNodeManager;\n\n  static getInstance(): RNSharedElementNodeManager {\n    if (!RNSharedElementNodeManager.instance) {\n      RNSharedElementNodeManager.instance = new RNSharedElementNodeManager();\n    }\n    return RNSharedElementNodeManager.instance;\n  }\n\n  acquire(\n    domNode: IHTMLElement,\n    isParent: boolean,\n    ancestorDomNode: IHTMLElement\n  ): RNSharedElementNode {\n    let node = this.nodes.get(domNode);\n    if (node) {\n      node.addRef();\n      return node;\n    }\n    node = new RNSharedElementNode(domNode, isParent, ancestorDomNode);\n    this.nodes.set(domNode, node);\n    return node;\n  }\n\n  release(node: RNSharedElementNode) {\n    const refCount = node.releaseRef();\n    if (!refCount) {\n      this.nodes.delete(node.domNode);\n    }\n    return refCount;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}