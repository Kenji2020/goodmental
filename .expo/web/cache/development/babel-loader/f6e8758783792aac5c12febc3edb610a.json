{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { Rect } from \"./Rect.web\";\nimport { RNSharedElementAlign, RNSharedElementResize } from \"./types\";\n\nfunction initElement(element) {\n  var style = element.style;\n  style.position = \"absolute\";\n  style.left = \"0px\";\n  style.top = \"0px\";\n  style.pointerEvents = \"none\";\n  style.transformOrigin = \"0% 0%\";\n  style.transformStyle = \"preserve-3d\";\n  style.backfaceVisibility = \"hidden\";\n  style.backgroundSize = \"100% 100%\";\n  style.boxSizing = \"border-box\";\n  style.overflow = \"hidden\";\n  return element;\n}\n\nfunction createTransform() {\n  var translateX = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var translateY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var scaleX = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var scaleY = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n  return \"matrix3d(\\n    \" + scaleX + \", 0, 0, 0,\\n    0, \" + scaleY + \", 0, 0,\\n    0, 0, 1, 0,\\n    \" + translateX + \", \" + translateY + \", 0, 1\\n)\";\n}\n\nexport var RNSharedElementView = function () {\n  function RNSharedElementView() {\n    _classCallCheck(this, RNSharedElementView);\n\n    this.parentLayout = Rect.empty;\n    this.element = initElement(document.createElement(\"div\"));\n    this.layout = Rect.empty;\n    this.style = null;\n    this.originalLayout = Rect.empty;\n    this._contentElement = null;\n    this.contentLayout = Rect.empty;\n    this.resize = RNSharedElementResize.Auto;\n    this.align = RNSharedElementAlign.Auto;\n  }\n\n  _createClass(RNSharedElementView, [{\n    key: \"contentElement\",\n    get: function get() {\n      return this._contentElement;\n    },\n    set: function set(value) {\n      if (this._contentElement === value) return;\n\n      if (this._contentElement) {\n        this.element.removeChild(this._contentElement);\n      }\n\n      this._contentElement = value ? initElement(value) : null;\n\n      if (this._contentElement) {\n        this.element.appendChild(this._contentElement);\n      }\n    }\n  }, {\n    key: \"updateLayout\",\n    value: function updateLayout() {\n      var layout = this.layout,\n          contentLayout = this.contentLayout,\n          resize = this.resize;\n      if (layout.equals(Rect.empty)) return;\n\n      if (resize === RNSharedElementResize.Stretch || resize === RNSharedElementResize.Auto && contentLayout.equals(layout)) {\n        this.updateLayoutForScale();\n      } else {\n        this.updateLayoutForResize();\n      }\n\n      this.updateStyle();\n    }\n  }, {\n    key: \"updateLayoutForScale\",\n    value: function updateLayoutForScale() {\n      var layout = this.layout,\n          originalLayout = this.originalLayout,\n          parentLayout = this.parentLayout,\n          element = this.element;\n      var width = originalLayout.width,\n          height = originalLayout.height;\n      var x = layout.x,\n          y = layout.y,\n          scaledWidth = layout.width,\n          scaledHeight = layout.height;\n      var widthPx = width + \"px\";\n      var heightPx = height + \"px\";\n      var style = element.style;\n      if (style.width !== widthPx) style.width = widthPx;\n      if (style.height !== heightPx) style.height = heightPx;\n      var translateX = x - parentLayout.x;\n      var translateY = y - parentLayout.y;\n      var scaleX = scaledWidth / width;\n      var scaleY = scaledHeight / height;\n      style.transform = createTransform(translateX, translateY, scaleX, scaleY);\n      var contentStyle = this._contentElement.style;\n      if (contentStyle.width !== widthPx) contentStyle.width = widthPx;\n      if (contentStyle.height !== heightPx) contentStyle.height = heightPx;\n      contentStyle.transform = createTransform();\n    }\n  }, {\n    key: \"updateLayoutForResize\",\n    value: function updateLayoutForResize() {\n      var layout = this.layout,\n          parentLayout = this.parentLayout,\n          element = this.element,\n          contentLayout = this.contentLayout,\n          originalLayout = this.originalLayout,\n          align = this.align,\n          resize = this.resize;\n      var x = layout.x,\n          y = layout.y,\n          width = layout.width,\n          height = layout.height;\n      var widthPx = width + \"px\";\n      var heightPx = height + \"px\";\n      var style = element.style;\n      if (style.width !== widthPx) style.width = widthPx;\n      if (style.height !== heightPx) style.height = heightPx;\n      var translateX = x - parentLayout.x;\n      var translateY = y - parentLayout.y;\n      style.transform = createTransform(translateX, translateY);\n      if (!this._contentElement) return;\n      var contentX = contentLayout.x,\n          contentY = contentLayout.y,\n          contentWidth = contentLayout.width,\n          contentHeight = contentLayout.height;\n      var overflow = \"hidden\";\n\n      switch (resize) {\n        case RNSharedElementResize.Auto:\n          break;\n\n        case RNSharedElementResize.Stretch:\n          contentWidth = width;\n          contentHeight = height;\n          break;\n\n        case RNSharedElementResize.Clip:\n          contentWidth = originalLayout.width;\n          contentHeight = originalLayout.height;\n          break;\n\n        case RNSharedElementResize.None:\n          contentWidth = originalLayout.width;\n          contentHeight = originalLayout.height;\n          overflow = \"visible\";\n          break;\n      }\n\n      switch (align) {\n        case RNSharedElementAlign.LeftTop:\n          contentX = 0;\n          contentY = 0;\n          break;\n\n        case RNSharedElementAlign.LeftCenter:\n          contentX = 0;\n          contentY = (height - contentHeight) / 2;\n          break;\n\n        case RNSharedElementAlign.LeftBottom:\n          contentX = 0;\n          contentY = height - contentHeight;\n          break;\n\n        case RNSharedElementAlign.RightTop:\n          contentX = width - contentWidth;\n          contentY = 0;\n          break;\n\n        case RNSharedElementAlign.RightCenter:\n          contentX = width - contentWidth;\n          contentY = (height - contentHeight) / 2;\n          break;\n\n        case RNSharedElementAlign.RightBottom:\n          contentX = width - contentWidth;\n          contentY = height - contentHeight;\n          break;\n\n        case RNSharedElementAlign.CenterTop:\n          contentX = (width - contentWidth) / 2;\n          contentY = 0;\n          break;\n\n        case RNSharedElementAlign.Auto:\n        case RNSharedElementAlign.CenterCenter:\n          contentX = (width - contentWidth) / 2;\n          contentY = (height - contentHeight) / 2;\n          break;\n\n        case RNSharedElementAlign.CenterBottom:\n          contentX = (width - contentWidth) / 2;\n          contentY = height - contentHeight;\n          break;\n      }\n\n      var contentWidthPx = contentWidth + \"px\";\n      var contentHeightPx = contentHeight + \"px\";\n      var contentStyle = this._contentElement.style;\n      if (contentStyle.width !== widthPx) contentStyle.width = contentWidthPx;\n      if (contentStyle.height !== heightPx) contentStyle.height = contentHeightPx;\n      contentStyle.transform = createTransform(contentX, contentY);\n\n      if (element.style.overflow !== overflow) {\n        element.style.overflow = overflow;\n      }\n    }\n  }, {\n    key: \"updateStyle\",\n    value: function updateStyle() {}\n  }]);\n\n  return RNSharedElementView;\n}();","map":{"version":3,"sources":["../../src/web/RNSharedElementView.web.ts"],"names":[],"mappings":";;AACA,SAAS,IAAT;AACA,SAEE,oBAFF,EAGE,qBAHF;;AAMA,SAAS,WAAT,CAAqB,OAArB,EAA0C;EACxC,IAAQ,KAAR,GAAkB,OAAlB,CAAQ,KAAR;EAGA,KAAK,CAAC,QAAN,GAAiB,UAAjB;EACA,KAAK,CAAC,IAAN,GAAa,KAAb;EACA,KAAK,CAAC,GAAN,GAAY,KAAZ;EACA,KAAK,CAAC,aAAN,GAAsB,MAAtB;EACA,KAAK,CAAC,eAAN,GAAwB,OAAxB;EACA,KAAK,CAAC,cAAN,GAAuB,aAAvB;EACA,KAAK,CAAC,kBAAN,GAA2B,QAA3B;EACA,KAAK,CAAC,cAAN,GAAuB,WAAvB;EACA,KAAK,CAAC,SAAN,GAAkB,YAAlB;EACA,KAAK,CAAC,QAAN,GAAiB,QAAjB;EAKA,OAAO,OAAP;AACD;;AAED,SAAS,eAAT,GAIoB;EAAA,IAHlB,UAGkB,uEAHG,CAGH;EAAA,IAFlB,UAEkB,uEAFG,CAEH;EAAA,IADlB,MACkB,uEADD,CACC;EAAA,IAAlB,MAAkB,uEAAD,CAAC;EAElB,2BACI,MADJ,2BAEO,MAFP,sCAII,UAJJ,UAImB,UAJnB;AAMD;;AAED,WAAa,mBAAb;EAAA;IAAA;;IAAA,KACS,YADT,GAC8B,IAAI,CAAC,KADnC;IAAA,KAEkB,OAFlB,GAE4B,WAAW,CAAC,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAD,CAFvC;IAAA,KAGS,MAHT,GAGwB,IAAI,CAAC,KAH7B;IAAA,KAIS,KAJT,GAI8C,IAJ9C;IAAA,KAKS,cALT,GAKgC,IAAI,CAAC,KALrC;IAAA,KAMS,eANT,GAMgD,IANhD;IAAA,KAOS,aAPT,GAO+B,IAAI,CAAC,KAPpC;IAAA,KAQS,MART,GAQyC,qBAAqB,CAAC,IAR/D;IAAA,KASS,KATT,GASuC,oBAAoB,CAAC,IAT5D;EAAA;;EAAA;IAAA;IAAA,KAWE,eAAkB;MAChB,OAAO,KAAK,eAAZ;IACD,CAbH;IAAA,KAcE,aAAmB,KAAnB,EAA6C;MAC3C,IAAI,KAAK,eAAL,KAAyB,KAA7B,EAAoC;;MACpC,IAAI,KAAK,eAAT,EAA0B;QACxB,KAAK,OAAL,CAAa,WAAb,CAAyB,KAAK,eAA9B;MACD;;MACD,KAAK,eAAL,GAAuB,KAAK,GAAG,WAAW,CAAC,KAAD,CAAd,GAAwB,IAApD;;MACA,IAAI,KAAK,eAAT,EAA0B;QACxB,KAAK,OAAL,CAAa,WAAb,CAAyB,KAAK,eAA9B;MACD;IACF;EAvBH;IAAA;IAAA,OAyBS,wBAAY;MACjB,IAAQ,MAAR,GAA0C,IAA1C,CAAQ,MAAR;MAAA,IAAgB,aAAhB,GAA0C,IAA1C,CAAgB,aAAhB;MAAA,IAA+B,MAA/B,GAA0C,IAA1C,CAA+B,MAA/B;MACA,IAAI,MAAM,CAAC,MAAP,CAAc,IAAI,CAAC,KAAnB,CAAJ,EAA+B;;MAG/B,IACE,MAAM,KAAK,qBAAqB,CAAC,OAAjC,IACC,MAAM,KAAK,qBAAqB,CAAC,IAAjC,IAAyC,aAAa,CAAC,MAAd,CAAqB,MAArB,CAF5C,EAGE;QACA,KAAK,oBAAL;MACD,CALD,MAKO;QACL,KAAK,qBAAL;MACD;;MAGD,KAAK,WAAL;IACD;EAzCH;IAAA;IAAA,OAkDU,gCAAoB;MAC1B,IAAQ,MAAR,GAA0D,IAA1D,CAAQ,MAAR;MAAA,IAAgB,cAAhB,GAA0D,IAA1D,CAAgB,cAAhB;MAAA,IAAgC,YAAhC,GAA0D,IAA1D,CAAgC,YAAhC;MAAA,IAA8C,OAA9C,GAA0D,IAA1D,CAA8C,OAA9C;MAGA,IAAQ,KAAR,GAA0B,cAA1B,CAAQ,KAAR;MAAA,IAAe,MAAf,GAA0B,cAA1B,CAAe,MAAf;MACA,IAAQ,CAAR,GAA2D,MAA3D,CAAQ,CAAR;MAAA,IAAW,CAAX,GAA2D,MAA3D,CAAW,CAAX;MAAA,IAAqB,WAArB,GAA2D,MAA3D,CAAc,KAAd;MAAA,IAA0C,YAA1C,GAA2D,MAA3D,CAAkC,MAAlC;MAGA,IAAM,OAAO,GAAG,KAAK,GAAG,IAAxB;MACA,IAAM,QAAQ,GAAG,MAAM,GAAG,IAA1B;MACA,IAAQ,KAAR,GAAkB,OAAlB,CAAQ,KAAR;MACA,IAAI,KAAK,CAAC,KAAN,KAAgB,OAApB,EAA6B,KAAK,CAAC,KAAN,GAAc,OAAd;MAC7B,IAAI,KAAK,CAAC,MAAN,KAAiB,QAArB,EAA+B,KAAK,CAAC,MAAN,GAAe,QAAf;MAG/B,IAAM,UAAU,GAAG,CAAC,GAAG,YAAY,CAAC,CAApC;MACA,IAAM,UAAU,GAAG,CAAC,GAAG,YAAY,CAAC,CAApC;MAGA,IAAM,MAAM,GAAG,WAAW,GAAG,KAA7B;MACA,IAAM,MAAM,GAAG,YAAY,GAAG,MAA9B;MAGA,KAAK,CAAC,SAAN,GAAkB,eAAe,CAAC,UAAD,EAAa,UAAb,EAAyB,MAAzB,EAAiC,MAAjC,CAAjC;MAGA,IAAe,YAAf,GAAgC,KAAK,eAArC,CAAQ,KAAR;MACA,IAAI,YAAY,CAAC,KAAb,KAAuB,OAA3B,EAAoC,YAAY,CAAC,KAAb,GAAqB,OAArB;MACpC,IAAI,YAAY,CAAC,MAAb,KAAwB,QAA5B,EAAsC,YAAY,CAAC,MAAb,GAAsB,QAAtB;MACtC,YAAY,CAAC,SAAb,GAAyB,eAAe,EAAxC;IACD;EAhFH;IAAA;IAAA,OAwFU,iCAAqB;MAC3B,IACE,MADF,GAQI,IARJ,CACE,MADF;MAAA,IAEE,YAFF,GAQI,IARJ,CAEE,YAFF;MAAA,IAGE,OAHF,GAQI,IARJ,CAGE,OAHF;MAAA,IAIE,aAJF,GAQI,IARJ,CAIE,aAJF;MAAA,IAKE,cALF,GAQI,IARJ,CAKE,cALF;MAAA,IAME,KANF,GAQI,IARJ,CAME,KANF;MAAA,IAOE,MAPF,GAQI,IARJ,CAOE,MAPF;MASA,IAAQ,CAAR,GAAgC,MAAhC,CAAQ,CAAR;MAAA,IAAW,CAAX,GAAgC,MAAhC,CAAW,CAAX;MAAA,IAAc,KAAd,GAAgC,MAAhC,CAAc,KAAd;MAAA,IAAqB,MAArB,GAAgC,MAAhC,CAAqB,MAArB;MAGA,IAAM,OAAO,GAAG,KAAK,GAAG,IAAxB;MACA,IAAM,QAAQ,GAAG,MAAM,GAAG,IAA1B;MACA,IAAQ,KAAR,GAAkB,OAAlB,CAAQ,KAAR;MACA,IAAI,KAAK,CAAC,KAAN,KAAgB,OAApB,EAA6B,KAAK,CAAC,KAAN,GAAc,OAAd;MAC7B,IAAI,KAAK,CAAC,MAAN,KAAiB,QAArB,EAA+B,KAAK,CAAC,MAAN,GAAe,QAAf;MAG/B,IAAM,UAAU,GAAG,CAAC,GAAG,YAAY,CAAC,CAApC;MACA,IAAM,UAAU,GAAG,CAAC,GAAG,YAAY,CAAC,CAApC;MACA,KAAK,CAAC,SAAN,GAAkB,eAAe,CAAC,UAAD,EAAa,UAAb,CAAjC;MAGA,IAAI,CAAC,KAAK,eAAV,EAA2B;MAC3B,IACK,QADL,GAKI,aALJ,CACE,CADF;MAAA,IAEK,QAFL,GAKI,aALJ,CAEE,CAFF;MAAA,IAGS,YAHT,GAKI,aALJ,CAGE,KAHF;MAAA,IAIU,aAJV,GAKI,aALJ,CAIE,MAJF;MAQA,IAAI,QAAQ,GAAG,QAAf;;MACA,QAAQ,MAAR;QACE,KAAK,qBAAqB,CAAC,IAA3B;UAEE;;QACF,KAAK,qBAAqB,CAAC,OAA3B;UACE,YAAY,GAAG,KAAf;UACA,aAAa,GAAG,MAAhB;UACA;;QACF,KAAK,qBAAqB,CAAC,IAA3B;UACE,YAAY,GAAG,cAAc,CAAC,KAA9B;UACA,aAAa,GAAG,cAAc,CAAC,MAA/B;UACA;;QACF,KAAK,qBAAqB,CAAC,IAA3B;UACE,YAAY,GAAG,cAAc,CAAC,KAA9B;UACA,aAAa,GAAG,cAAc,CAAC,MAA/B;UACA,QAAQ,GAAG,SAAX;UACA;MAhBJ;;MAoBA,QAAQ,KAAR;QACE,KAAK,oBAAoB,CAAC,OAA1B;UACE,QAAQ,GAAG,CAAX;UACA,QAAQ,GAAG,CAAX;UACA;;QACF,KAAK,oBAAoB,CAAC,UAA1B;UACE,QAAQ,GAAG,CAAX;UACA,QAAQ,GAAG,CAAC,MAAM,GAAG,aAAV,IAA2B,CAAtC;UACA;;QACF,KAAK,oBAAoB,CAAC,UAA1B;UACE,QAAQ,GAAG,CAAX;UACA,QAAQ,GAAG,MAAM,GAAG,aAApB;UACA;;QACF,KAAK,oBAAoB,CAAC,QAA1B;UACE,QAAQ,GAAG,KAAK,GAAG,YAAnB;UACA,QAAQ,GAAG,CAAX;UACA;;QACF,KAAK,oBAAoB,CAAC,WAA1B;UACE,QAAQ,GAAG,KAAK,GAAG,YAAnB;UACA,QAAQ,GAAG,CAAC,MAAM,GAAG,aAAV,IAA2B,CAAtC;UACA;;QACF,KAAK,oBAAoB,CAAC,WAA1B;UACE,QAAQ,GAAG,KAAK,GAAG,YAAnB;UACA,QAAQ,GAAG,MAAM,GAAG,aAApB;UACA;;QACF,KAAK,oBAAoB,CAAC,SAA1B;UACE,QAAQ,GAAG,CAAC,KAAK,GAAG,YAAT,IAAyB,CAApC;UACA,QAAQ,GAAG,CAAX;UACA;;QACF,KAAK,oBAAoB,CAAC,IAA1B;QACA,KAAK,oBAAoB,CAAC,YAA1B;UACE,QAAQ,GAAG,CAAC,KAAK,GAAG,YAAT,IAAyB,CAApC;UACA,QAAQ,GAAG,CAAC,MAAM,GAAG,aAAV,IAA2B,CAAtC;UACA;;QACF,KAAK,oBAAoB,CAAC,YAA1B;UACE,QAAQ,GAAG,CAAC,KAAK,GAAG,YAAT,IAAyB,CAApC;UACA,QAAQ,GAAG,MAAM,GAAG,aAApB;UACA;MArCJ;;MAyCA,IAAM,cAAc,GAAG,YAAY,GAAG,IAAtC;MACA,IAAM,eAAe,GAAG,aAAa,GAAG,IAAxC;MACA,IAAe,YAAf,GAAgC,KAAK,eAArC,CAAQ,KAAR;MACA,IAAI,YAAY,CAAC,KAAb,KAAuB,OAA3B,EAAoC,YAAY,CAAC,KAAb,GAAqB,cAArB;MACpC,IAAI,YAAY,CAAC,MAAb,KAAwB,QAA5B,EAAsC,YAAY,CAAC,MAAb,GAAsB,eAAtB;MAGtC,YAAY,CAAC,SAAb,GAAyB,eAAe,CAAC,QAAD,EAAW,QAAX,CAAxC;;MAGA,IAAI,OAAO,CAAC,KAAR,CAAc,QAAd,KAA2B,QAA/B,EAAyC;QACvC,OAAO,CAAC,KAAR,CAAc,QAAd,GAAyB,QAAzB;MACD;IACF;EArMH;IAAA;IAAA,OAuMU,uBAAW,CAIlB;EA3MH;;EAAA;AAAA","sourcesContent":["import { RNSharedElementStyle } from \"./RNSharedElementStyle.web\";\nimport { Rect } from \"./Rect.web\";\nimport {\n  IHTMLElement,\n  RNSharedElementAlign,\n  RNSharedElementResize,\n} from \"./types\";\n\nfunction initElement(element: IHTMLElement): IHTMLElement {\n  const { style } = element;\n\n  // Reset default layout behavior\n  style.position = \"absolute\";\n  style.left = \"0px\";\n  style.top = \"0px\";\n  style.pointerEvents = \"none\";\n  style.transformOrigin = \"0% 0%\";\n  style.transformStyle = \"preserve-3d\";\n  style.backfaceVisibility = \"hidden\";\n  style.backgroundSize = \"100% 100%\";\n  style.boxSizing = \"border-box\";\n  style.overflow = \"hidden\";\n\n  // Clear styles\n  // style.backgroundColor = null;\n\n  return element;\n}\n\nfunction createTransform(\n  translateX: number = 0,\n  translateY: number = 0,\n  scaleX: number = 1,\n  scaleY: number = 1\n) {\n  return `matrix3d(\n    ${scaleX}, 0, 0, 0,\n    0, ${scaleY}, 0, 0,\n    0, 0, 1, 0,\n    ${translateX}, ${translateY}, 0, 1\n)`;\n}\n\nexport class RNSharedElementView {\n  public parentLayout: Rect = Rect.empty;\n  public readonly element = initElement(document.createElement(\"div\"));\n  public layout: Rect = Rect.empty;\n  public style: RNSharedElementStyle | null = null;\n  public originalLayout: Rect = Rect.empty;\n  public _contentElement: IHTMLElement | null = null;\n  public contentLayout: Rect = Rect.empty;\n  public resize: RNSharedElementResize = RNSharedElementResize.Auto;\n  public align: RNSharedElementAlign = RNSharedElementAlign.Auto;\n\n  get contentElement(): IHTMLElement | null {\n    return this._contentElement;\n  }\n  set contentElement(value: IHTMLElement | null) {\n    if (this._contentElement === value) return;\n    if (this._contentElement) {\n      this.element.removeChild(this._contentElement);\n    }\n    this._contentElement = value ? initElement(value) : null;\n    if (this._contentElement) {\n      this.element.appendChild(this._contentElement);\n    }\n  }\n\n  public updateLayout() {\n    const { layout, contentLayout, resize } = this;\n    if (layout.equals(Rect.empty)) return;\n\n    // Run either the stretch (scale) or resize algorithm\n    if (\n      resize === RNSharedElementResize.Stretch ||\n      (resize === RNSharedElementResize.Auto && contentLayout.equals(layout))\n    ) {\n      this.updateLayoutForScale();\n    } else {\n      this.updateLayoutForResize();\n    }\n\n    // Update style\n    this.updateStyle();\n  }\n\n  /**\n   * Updates the layout by only changing the scale of the\n   * element. This technique achieves a very high performance\n   * as it can be handled completely by the GPU, requiring\n   * no layout passes in the browser. It is however also more\n   * limited and can't be used for all effects.\n   */\n  private updateLayoutForScale() {\n    const { layout, originalLayout, parentLayout, element } = this;\n\n    // Update layout\n    const { width, height } = originalLayout;\n    const { x, y, width: scaledWidth, height: scaledHeight } = layout;\n\n    // Update size\n    const widthPx = width + \"px\";\n    const heightPx = height + \"px\";\n    const { style } = element;\n    if (style.width !== widthPx) style.width = widthPx;\n    if (style.height !== heightPx) style.height = heightPx;\n\n    // Calculate translation\n    const translateX = x - parentLayout.x;\n    const translateY = y - parentLayout.y;\n\n    // Calculate scale\n    const scaleX = scaledWidth / width;\n    const scaleY = scaledHeight / height;\n\n    // Update transform matrix\n    style.transform = createTransform(translateX, translateY, scaleX, scaleY);\n\n    // Update content element\n    const { style: contentStyle } = this._contentElement!;\n    if (contentStyle.width !== widthPx) contentStyle.width = widthPx;\n    if (contentStyle.height !== heightPx) contentStyle.height = heightPx;\n    contentStyle.transform = createTransform();\n  }\n\n  /**\n   * Updates the layout by updating the size of the\n   * element and its content element. This algorihm\n   * can achieve any possible layout, as well as\n   * clipping of the content.\n   */\n  private updateLayoutForResize() {\n    const {\n      layout,\n      parentLayout,\n      element,\n      contentLayout,\n      originalLayout,\n      align,\n      resize,\n    } = this;\n    const { x, y, width, height } = layout;\n\n    // Update size\n    const widthPx = width + \"px\";\n    const heightPx = height + \"px\";\n    const { style } = element;\n    if (style.width !== widthPx) style.width = widthPx;\n    if (style.height !== heightPx) style.height = heightPx;\n\n    // Update transform\n    const translateX = x - parentLayout.x;\n    const translateY = y - parentLayout.y;\n    style.transform = createTransform(translateX, translateY);\n\n    // Content\n    if (!this._contentElement) return;\n    let {\n      x: contentX,\n      y: contentY,\n      width: contentWidth,\n      height: contentHeight,\n    } = contentLayout;\n\n    // Get content size\n    let overflow = \"hidden\";\n    switch (resize) {\n      case RNSharedElementResize.Auto:\n        // keep original size\n        break;\n      case RNSharedElementResize.Stretch:\n        contentWidth = width;\n        contentHeight = height;\n        break;\n      case RNSharedElementResize.Clip:\n        contentWidth = originalLayout.width;\n        contentHeight = originalLayout.height;\n        break;\n      case RNSharedElementResize.None:\n        contentWidth = originalLayout.width;\n        contentHeight = originalLayout.height;\n        overflow = \"visible\";\n        break;\n    }\n\n    // Align\n    switch (align) {\n      case RNSharedElementAlign.LeftTop:\n        contentX = 0;\n        contentY = 0;\n        break;\n      case RNSharedElementAlign.LeftCenter:\n        contentX = 0;\n        contentY = (height - contentHeight) / 2;\n        break;\n      case RNSharedElementAlign.LeftBottom:\n        contentX = 0;\n        contentY = height - contentHeight;\n        break;\n      case RNSharedElementAlign.RightTop:\n        contentX = width - contentWidth;\n        contentY = 0;\n        break;\n      case RNSharedElementAlign.RightCenter:\n        contentX = width - contentWidth;\n        contentY = (height - contentHeight) / 2;\n        break;\n      case RNSharedElementAlign.RightBottom:\n        contentX = width - contentWidth;\n        contentY = height - contentHeight;\n        break;\n      case RNSharedElementAlign.CenterTop:\n        contentX = (width - contentWidth) / 2;\n        contentY = 0;\n        break;\n      case RNSharedElementAlign.Auto:\n      case RNSharedElementAlign.CenterCenter:\n        contentX = (width - contentWidth) / 2;\n        contentY = (height - contentHeight) / 2;\n        break;\n      case RNSharedElementAlign.CenterBottom:\n        contentX = (width - contentWidth) / 2;\n        contentY = height - contentHeight;\n        break;\n    }\n\n    // Update content size\n    const contentWidthPx = contentWidth + \"px\";\n    const contentHeightPx = contentHeight + \"px\";\n    const { style: contentStyle } = this._contentElement;\n    if (contentStyle.width !== widthPx) contentStyle.width = contentWidthPx;\n    if (contentStyle.height !== heightPx) contentStyle.height = contentHeightPx;\n\n    // Update content transform\n    contentStyle.transform = createTransform(contentX, contentY);\n\n    // Update overflow\n    if (element.style.overflow !== overflow) {\n      element.style.overflow = overflow;\n    }\n  }\n\n  private updateStyle() {\n    //const { style, element } = this;\n    //if (!style) return;\n    // element.style.backgroundColor = formatColor(style.backgroundColor);\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}