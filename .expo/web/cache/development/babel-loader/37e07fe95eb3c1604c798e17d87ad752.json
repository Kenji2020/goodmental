{"ast":null,"code":"import React, { useEffect } from 'react';\nimport AuthNavigator from \"./AuthNavigator\";\nimport AppNavigator from \"./AppNavigator\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport navigationTheme from \"./navigationTheme\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login, logout, selectUser } from \"../redux/features/userSlice\";\nimport { auth, onAuthStateChanged } from \"../firebase/firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar MainNavigator = function MainNavigator() {\n  var user = useSelector(selectUser);\n  var confirmation = useSelector(function (state) {\n    return state.userInfo.confirmation;\n  });\n  var dispatch = useDispatch();\n  useEffect(function () {\n    onAuthStateChanged(auth, function (userAuth) {\n      if (userAuth) {\n        dispatch(login({\n          email: userAuth.email,\n          uid: userAuth.uid,\n          displayName: userAuth.displayName\n        }));\n      } else {\n        dispatch(logout());\n      }\n    });\n  }, []);\n  return _jsx(NavigationContainer, {\n    theme: navigationTheme,\n    children: user && confirmation ? _jsx(AppNavigator, {}) : _jsx(AuthNavigator, {})\n  });\n};\n\nexport default MainNavigator;","map":{"version":3,"names":["React","useEffect","AuthNavigator","AppNavigator","NavigationContainer","navigationTheme","useDispatch","useSelector","login","logout","selectUser","auth","onAuthStateChanged","MainNavigator","user","confirmation","state","userInfo","dispatch","userAuth","email","uid","displayName"],"sources":["/Users/victorsalgado/Desktop/goodmental/src/navigation/MainNavigator.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport AuthNavigator from './AuthNavigator';\r\nimport AppNavigator from './AppNavigator';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport navigationTheme from './navigationTheme';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { login, logout, selectUser } from '../redux/features/userSlice';\r\nimport { auth, onAuthStateChanged } from '../firebase/firebase';\r\n\r\nconst MainNavigator = () => {\r\n  const user = useSelector(selectUser);\r\n  const confirmation = useSelector(state => state.userInfo.confirmation)\r\n  const dispatch = useDispatch();\r\n    useEffect(() => {\r\n    onAuthStateChanged(auth, (userAuth) => {\r\n      if (userAuth) {\r\n        dispatch(\r\n          login({\r\n            email: userAuth.email,\r\n            uid: userAuth.uid,\r\n            displayName: userAuth.displayName,\r\n          })\r\n        );\r\n      } else {\r\n        dispatch(logout());\r\n      }\r\n    });\r\n  }, []);\r\n\r\n    return (\r\n    <NavigationContainer theme={navigationTheme}>\r\n      {user && confirmation ? <AppNavigator/> : <AuthNavigator />}\r\n    </NavigationContainer>\r\n    )}\r\n\r\nexport default MainNavigator;"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP;AACA,OAAOC,YAAP;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,eAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,UAAxB;AACA,SAASC,IAAT,EAAeC,kBAAf;;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;EAC1B,IAAMC,IAAI,GAAGP,WAAW,CAACG,UAAD,CAAxB;EACA,IAAMK,YAAY,GAAGR,WAAW,CAAC,UAAAS,KAAK;IAAA,OAAIA,KAAK,CAACC,QAAN,CAAeF,YAAnB;EAAA,CAAN,CAAhC;EACA,IAAMG,QAAQ,GAAGZ,WAAW,EAA5B;EACEL,SAAS,CAAC,YAAM;IAChBW,kBAAkB,CAACD,IAAD,EAAO,UAACQ,QAAD,EAAc;MACrC,IAAIA,QAAJ,EAAc;QACZD,QAAQ,CACNV,KAAK,CAAC;UACJY,KAAK,EAAED,QAAQ,CAACC,KADZ;UAEJC,GAAG,EAAEF,QAAQ,CAACE,GAFV;UAGJC,WAAW,EAAEH,QAAQ,CAACG;QAHlB,CAAD,CADC,CAAR;MAOD,CARD,MAQO;QACLJ,QAAQ,CAACT,MAAM,EAAP,CAAR;MACD;IACF,CAZiB,CAAlB;EAaD,CAdU,EAcR,EAdQ,CAAT;EAgBA,OACA,KAAC,mBAAD;IAAqB,KAAK,EAAEJ,eAA5B;IAAA,UACGS,IAAI,IAAIC,YAAR,GAAuB,KAAC,YAAD,KAAvB,GAAyC,KAAC,aAAD;EAD5C,EADA;AAIE,CAxBN;;AA0BA,eAAeF,aAAf"},"metadata":{},"sourceType":"module"}